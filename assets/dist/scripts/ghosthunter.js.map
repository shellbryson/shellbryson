{"version":3,"sources":["ghosthunter.js"],"names":["$","root","factory","global","step2list","step3list","v","C","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","porterStemmer","lunr","config","builder","Builder","pipeline","add","trimmer","stopWordFilter","stemmer","searchPipeline","call","build","version","utils","warn","this","message","console","asString","obj","toString","FieldRef","docRef","fieldName","stringValue","_stringValue","joiner","fromString","s","n","indexOf","fieldRef","slice","prototype","undefined","idf","posting","documentCount","documentsWithTerm","Object","keys","length","x","Math","log","abs","Token","str","metadata","update","fn","clone","tokenizer","Array","isArray","map","t","toLowerCase","trim","len","tokens","sliceEnd","sliceStart","sliceLength","charAt","match","separator","push","position","index","Pipeline","_stack","registeredFunctions","create","registerFunction","label","warnIfFunctionNotRegistered","load","serialised","forEach","fnName","Error","arguments","after","existingFn","newFn","pos","splice","before","remove","run","stackLength","i","reduce","memo","token","j","result","concat","runString","reset","toJSON","Vector","elements","_magnitude","positionForIndex","start","end","pivotPoint","floor","pivotIndex","insert","insertIdx","val","upsert","magnitude","sumOfSquares","elementsLength","sqrt","dot","otherVector","dotProduct","a","b","aLen","bLen","aVal","bVal","similarity","toArray","output","ational","tional","enci","anci","izer","bli","alli","entli","eli","ousli","ization","ation","ator","alism","iveness","fulness","ousness","aliti","iviti","biliti","logi","icate","ative","alize","iciti","ical","ful","ness","c","RegExp","w","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","test","replace","fp","exec","generateStopWordFilter","stopWords","words","stopWord","TokenSet","final","edges","id","_nextId","fromArray","arr","finish","fromClause","clause","fromFuzzyString","term","editDistance","stack","node","editsRemaining","noEditNode","char","deletionNode","frame","pop","substitutionNode","insertionNode","transposeNode","charA","charB","wildcardFound","next","prefix","edge","_str","labels","sort","intersect","qNode","qEdges","qLen","nEdges","nLen","q","qEdge","nEdge","previousWord","uncheckedNodes","minimizedNodes","word","commonPrefix","minimize","child","nextNode","parent","downTo","childKey","Index","attrs","invertedIndex","fieldVectors","tokenSet","fields","search","queryString","query","QueryParser","parse","Query","matchingFields","queryVectors","termFieldCache","clauses","terms","usePipeline","m","JSON","stringify","termTokenSet","expandedTerms","expandedTerm","termIndex","_index","k","field","fieldPosting","matchingDocumentRefs","termField","boost","l","fieldMatch","matchingDocumentRef","matchingFieldRef","MatchData","matchingFieldRefs","results","matches","docMatch","fieldVector","score","matchData","combine","ref","serializedIndex","serializedVectors","serializedInvertedIndex","tokenSetBuilder","tuple","_ref","_fields","fieldTermFrequencies","fieldLengths","_b","_k1","metadataWhitelist","number","k1","doc","fieldTerms","metadataKey","calculateAverageFieldLengths","fieldRefs","numberOfFields","accumulator","documentsWithField","averageFieldLength","createFieldVectors","fieldRefsLength","termIdfCache","fieldLength","termFrequencies","termsLength","scoreWithPrecision","tf","round","createTokenSet","use","args","unshift","apply","clonedMetadata","metadataKeys","key","otherMatchData","allFields","wildcard","String","NONE","LEADING","TRAILING","options","QueryParseError","name","QueryLexer","lexemes","escapeCharPositions","state","lexText","sliceString","subSlices","join","emit","type","escapeCharacter","EOS","width","ignore","backup","acceptDigitRun","charCode","charCodeAt","more","FIELD","TERM","EDIT_DISTANCE","BOOST","lexField","lexer","lexTerm","lexEditDistance","lexBoost","lexEOS","termSeparator","currentClause","lexemeIdx","parseFieldOrTerm","peekLexeme","consumeLexeme","lexeme","nextClause","completedClause","parser","parseField","parseTerm","errorMessage","possibleFields","f","nextLexeme","parseEditDistance","parseBoost","parseInt","isNaN","define","amd","exports","module","array","getChar","idx","getArrayMember","Levenshtein","str_m","str_n","previous","current","matrix","getElem","_matrix","distance","n_val","n_idx","m_val","m_idx","min","inspect","no_print","max","buff","sep","getMatrix","o","row","cell","getSteps","steps","y","u","d","Number","MAX_VALUE","valueOf","ghostHunter","opts","extend","defaults","pluginMethods","init","resultsData","onPageLoad","onKeyUp","result_template","info_template","displaySearchInfo","zeroResultsInfo","onComplete","filterfields","subpath","item_preprocessor","indexing_start","indexing_end","includebodysearch","getSubpathKey","lastTimeoutID","settleIDs","each","newAttr","getAttribute","setAttribute","grabAndIndex","blogData","latestPost","url","ghosthunter_key","params","limit","include","formats","me","get","done","data","idxSrc","posts","arrayItem","Date","updated_at","getTime","tag_arr","tags","meta_description","category","parsedData","title","description","custom_excerpt","pubDate","published_at","tag","plaintext","date","localUrl","getDate","getMonth","getFullYear","link","assign","subpathKey","localStorage","setItem","e","isInit","target","that","window","setTimeout","loadAPI","focus","closest","submit","preventDefault","find","keydown","event","which","keyup","getItem","value","clearTimeout","thingsFound","valueSplit","split","ilen","searchResult","jlen","otherRefs","klen","empty","append","format","amount","children","eq","replaceWith","lunrref","postData","listItems","currentRefs","newRefs","apiData","step","html","bind","clear","r","jQuery"],"mappings":"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C,GACtC,IAAIC,EAAQD,EAAUnF,OAAO,SAAUC,EAAMoF,GAE3C,OADApF,EAAKoF,GAAYA,EACVpF,GACN,IAEH,OAAO,SAAUC,GACf,GAAIA,GAASkF,EAAMlF,EAAM3E,cAAgB2E,EAAM3E,WAAY,OAAO2E,IAgBtE/F,EAAKO,eAAiBP,EAAK+K,uBAAuB,CAChD,IACA,OACA,QACA,SACA,QACA,MACA,SACA,OACA,KACA,QACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,UACA,OACA,MACA,KACA,MACA,SACA,QACA,OACA,MACA,KACA,OACA,SACA,OACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,KACA,MACA,OACA,MACA,MACA,MACA,UACA,IACA,KACA,KACA,OACA,KACA,KACA,MACA,OACA,QACA,MACA,OACA,SACA,MACA,KACA,QACA,OACA,OACA,KACA,UACA,KACA,MACA,MACA,KACA,MACA,QACA,KACA,OACA,KACA,QACA,MACA,MACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,KACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,MACA,KACA,MACA,OACA,KACA,QACA,MACA,KACA,OACA,OACA,OACA,QACA,QACA,QACA,MACA,OACA,MACA,OACA,OACA,QACA,MACA,MACA,SAGF/K,EAAKsE,SAASI,iBAAiB1E,EAAKO,eAAgB,kBAqBpDP,EAAKM,QAAU,SAAUyF,GACvB,OAAOA,EAAM9C,OAAO,SAAUrB,GAC5B,OAAOA,EAAEgJ,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,OAIjD5K,EAAKsE,SAASI,iBAAiB1E,EAAKM,QAAS,WA2B7CN,EAAKmL,SAAW,WACdpK,KAAKqK,OAAQ,EACbrK,KAAKsK,MAAQ,GACbtK,KAAKuK,GAAKtL,EAAKmL,SAASI,QACxBvL,EAAKmL,SAASI,SAAW,GAW3BvL,EAAKmL,SAASI,QAAU,EASxBvL,EAAKmL,SAASK,UAAY,SAAUC,GAGlC,IAFA,IAAIvL,EAAU,IAAIF,EAAKmL,SAAShL,QAEvByF,EAAI,EAAGjC,EAAM8H,EAAIhJ,OAAQmD,EAAIjC,EAAKiC,IACzC1F,EAAQ6G,OAAO0E,EAAI7F,IAIrB,OADA1F,EAAQwL,SACDxL,EAAQ9B,MAYjB4B,EAAKmL,SAASQ,WAAa,SAAUC,GACnC,MAAI,iBAAkBA,EACb5L,EAAKmL,SAASU,gBAAgBD,EAAOE,KAAMF,EAAOG,cAElD/L,EAAKmL,SAASxJ,WAAWiK,EAAOE,OAmB3C9L,EAAKmL,SAASU,gBAAkB,SAAU9I,EAAKgJ,GAS7C,IARA,IAAI3N,EAAO,IAAI4B,EAAKmL,SAEhBa,EAAQ,CAAC,CACXC,KAAM7N,EACN8N,eAAgBH,EAChBhJ,IAAKA,IAGAiJ,EAAMvJ,QAAQ,CACnB,IAKM0J,EAwBAC,EACAC,EA9BFC,EAAQN,EAAMO,MAGlB,GAAID,EAAMvJ,IAAIN,OAAS,GACjB2J,EAAOE,EAAMvJ,IAAIiB,OAAO,MAGhBsI,EAAML,KAAKZ,MACrBc,EAAaG,EAAML,KAAKZ,MAAMe,IAE9BD,EAAa,IAAInM,EAAKmL,SACtBmB,EAAML,KAAKZ,MAAMe,GAAQD,GAGH,GAApBG,EAAMvJ,IAAIN,OACZ0J,EAAWf,OAAQ,EAEnBY,EAAM7H,KAAK,CACT8H,KAAME,EACND,eAAgBI,EAAMJ,eACtBnJ,IAAKuJ,EAAMvJ,IAAIf,MAAM,KAQ3B,GAAIsK,EAAMJ,eAAiB,GAAKI,EAAMvJ,IAAIN,OAAS,GAC7C2J,EAAOE,EAAMvJ,IAAIiB,OAAO,MAGhBsI,EAAML,KAAKZ,MACrBgB,EAAeC,EAAML,KAAKZ,MAAMe,IAEhCC,EAAe,IAAIrM,EAAKmL,SACxBmB,EAAML,KAAKZ,MAAMe,GAAQC,GAGvBC,EAAMvJ,IAAIN,QAAU,EACtB4J,EAAajB,OAAQ,EAErBY,EAAM7H,KAAK,CACT8H,KAAMI,EACNH,eAAgBI,EAAMJ,eAAiB,EACvCnJ,IAAKuJ,EAAMvJ,IAAIf,MAAM,KAc3B,GAPIsK,EAAMJ,eAAiB,GAAyB,GAApBI,EAAMvJ,IAAIN,SACxC6J,EAAML,KAAKb,OAAQ,GAMjBkB,EAAMJ,eAAiB,GAAKI,EAAMvJ,IAAIN,QAAU,EAAG,CACrD,GAAI,MAAO6J,EAAML,KAAKZ,MACpB,IAAImB,EAAmBF,EAAML,KAAKZ,MAAM,SACnC,CACDmB,EAAmB,IAAIxM,EAAKmL,SAChCmB,EAAML,KAAKZ,MAAM,KAAOmB,EAGF,GAApBF,EAAMvJ,IAAIN,OACZ+J,EAAiBpB,OAAQ,EAEzBY,EAAM7H,KAAK,CACT8H,KAAMO,EACNN,eAAgBI,EAAMJ,eAAiB,EACvCnJ,IAAKuJ,EAAMvJ,IAAIf,MAAM,KAO3B,GAAIsK,EAAMJ,eAAiB,EAAG,CAC5B,GAAI,MAAOI,EAAML,KAAKZ,MACpB,IAAIoB,EAAgBH,EAAML,KAAKZ,MAAM,SAChC,CACDoB,EAAgB,IAAIzM,EAAKmL,SAC7BmB,EAAML,KAAKZ,MAAM,KAAOoB,EAGF,GAApBH,EAAMvJ,IAAIN,OACZgK,EAAcrB,OAAQ,EAEtBY,EAAM7H,KAAK,CACT8H,KAAMQ,EACNP,eAAgBI,EAAMJ,eAAiB,EACvCnJ,IAAKuJ,EAAMvJ,MAQjB,GAAIuJ,EAAMJ,eAAiB,GAAKI,EAAMvJ,IAAIN,OAAS,EAAG,CACpD,IAEIiK,EAFAC,EAAQL,EAAMvJ,IAAIiB,OAAO,GACzB4I,EAAQN,EAAMvJ,IAAIiB,OAAO,GAGzB4I,KAASN,EAAML,KAAKZ,MACtBqB,EAAgBJ,EAAML,KAAKZ,MAAMuB,IAEjCF,EAAgB,IAAI1M,EAAKmL,SACzBmB,EAAML,KAAKZ,MAAMuB,GAASF,GAGJ,GAApBJ,EAAMvJ,IAAIN,OACZiK,EAActB,OAAQ,EAEtBY,EAAM7H,KAAK,CACT8H,KAAMS,EACNR,eAAgBI,EAAMJ,eAAiB,EACvCnJ,IAAK4J,EAAQL,EAAMvJ,IAAIf,MAAM,MAMrC,OAAO5D,GAaT4B,EAAKmL,SAASxJ,WAAa,SAAUoB,GAanC,IAZA,IAAIkJ,EAAO,IAAIjM,EAAKmL,SAChB/M,EAAO6N,EACPY,GAAgB,EAUXjH,EAAI,EAAGjC,EAAMZ,EAAIN,OAAQmD,EAAIjC,EAAKiC,IAAK,CAC9C,IAAIwG,EAAOrJ,EAAI6C,GACXwF,EAASxF,GAAKjC,EAAM,EAExB,GAAY,KAARyI,EACFS,GAAgB,EAChBZ,EAAKZ,MAAMe,GAAQH,EACnBA,EAAKb,MAAQA,MAER,CACL,IAAI0B,EAAO,IAAI9M,EAAKmL,SACpB2B,EAAK1B,MAAQA,EAEba,EAAKZ,MAAMe,GAAQU,EACnBb,EAAOa,EAGHD,IACFZ,EAAKZ,MAAM,KAAOjN,IAKxB,OAAOA,GAST4B,EAAKmL,SAASlJ,UAAUgG,QAAU,WAQhC,IAPA,IAAIgD,EAAQ,GAERe,EAAQ,CAAC,CACXe,OAAQ,GACRd,KAAMlL,OAGDiL,EAAMvJ,QAAQ,CACnB,IAAI6J,EAAQN,EAAMO,MACdlB,EAAQ9I,OAAOC,KAAK8J,EAAML,KAAKZ,OAC/B1H,EAAM0H,EAAM5I,OAEZ6J,EAAML,KAAKb,OACbH,EAAM9G,KAAKmI,EAAMS,QAGnB,IAAK,IAAInH,EAAI,EAAGA,EAAIjC,EAAKiC,IAAK,CAC5B,IAAIoH,EAAO3B,EAAMzF,GAEjBoG,EAAM7H,KAAK,CACT4I,OAAQT,EAAMS,OAAO7G,OAAO8G,GAC5Bf,KAAMK,EAAML,KAAKZ,MAAM2B,MAK7B,OAAO/B,GAaTjL,EAAKmL,SAASlJ,UAAUb,SAAW,WASjC,GAAIL,KAAKkM,KACP,OAAOlM,KAAKkM,KAOd,IAJA,IAAIlK,EAAMhC,KAAKqK,MAAQ,IAAM,IACzB8B,EAAS3K,OAAOC,KAAKzB,KAAKsK,OAAO8B,OACjCxJ,EAAMuJ,EAAOzK,OAERmD,EAAI,EAAGA,EAAIjC,EAAKiC,IAAK,CAC5B,IAAIjB,EAAQuI,EAAOtH,GAGnB7C,EAAMA,EAAM4B,EAFD5D,KAAKsK,MAAM1G,GAEG2G,GAG3B,OAAOvI,GAaT/C,EAAKmL,SAASlJ,UAAUmL,UAAY,SAAUzF,GAU5C,IATA,IAAIO,EAAS,IAAIlI,EAAKmL,SAClBmB,OAAQpK,EAER8J,EAAQ,CAAC,CACXqB,MAAO1F,EACPO,OAAQA,EACR+D,KAAMlL,OAGDiL,EAAMvJ,QAAQ,CACnB6J,EAAQN,EAAMO,MAWd,IALA,IAAIe,EAAS/K,OAAOC,KAAK8J,EAAMe,MAAMhC,OACjCkC,EAAOD,EAAO7K,OACd+K,EAASjL,OAAOC,KAAK8J,EAAML,KAAKZ,OAChCoC,EAAOD,EAAO/K,OAETiL,EAAI,EAAGA,EAAIH,EAAMG,IAGxB,IAFA,IAAIC,EAAQL,EAAOI,GAEV7L,EAAI,EAAGA,EAAI4L,EAAM5L,IAAK,CAC7B,IAAI+L,EAAQJ,EAAO3L,GAEnB,GAAI+L,GAASD,GAAkB,KAATA,EAAc,CAClC,IAAI1B,EAAOK,EAAML,KAAKZ,MAAMuC,GACxBP,EAAQf,EAAMe,MAAMhC,MAAMsC,GAC1BvC,EAAQa,EAAKb,OAASiC,EAAMjC,MAC5B0B,OAAO5K,EAEP0L,KAAStB,EAAMpE,OAAOmD,OAIxByB,EAAOR,EAAMpE,OAAOmD,MAAMuC,IACrBxC,MAAQ0B,EAAK1B,OAASA,IAM3B0B,EAAO,IAAI9M,EAAKmL,UACXC,MAAQA,EACbkB,EAAMpE,OAAOmD,MAAMuC,GAASd,GAG9Bd,EAAM7H,KAAK,CACTkJ,MAAOA,EACPnF,OAAQ4E,EACRb,KAAMA,MAOhB,OAAO/D,GAETlI,EAAKmL,SAAShL,QAAU,WACtBY,KAAK8M,aAAe,GACpB9M,KAAK3C,KAAO,IAAI4B,EAAKmL,SACrBpK,KAAK+M,eAAiB,GACtB/M,KAAKgN,eAAiB,IAGxB/N,EAAKmL,SAAShL,QAAQ8B,UAAU8E,OAAS,SAAUiH,GACjD,IAAI/B,EACAgC,EAAe,EAEnB,GAAID,EAAOjN,KAAK8M,aACd,MAAM,IAAI5I,MAAO,+BAGnB,IAAK,IAAIW,EAAI,EAAGA,EAAIoI,EAAKvL,QAAUmD,EAAI7E,KAAK8M,aAAapL,QACnDuL,EAAKpI,IAAM7E,KAAK8M,aAAajI,GAD8BA,IAE/DqI,IAGFlN,KAAKmN,SAASD,GAGZhC,EADgC,GAA9BlL,KAAK+M,eAAerL,OACf1B,KAAK3C,KAEL2C,KAAK+M,eAAe/M,KAAK+M,eAAerL,OAAS,GAAG0L,MAG7D,IAASvI,EAAIqI,EAAcrI,EAAIoI,EAAKvL,OAAQmD,IAAK,CAC/C,IAAIwI,EAAW,IAAIpO,EAAKmL,SACpBiB,EAAO4B,EAAKpI,GAEhBqG,EAAKZ,MAAMe,GAAQgC,EAEnBrN,KAAK+M,eAAe3J,KAAK,CACvBkK,OAAQpC,EACRG,KAAMA,EACN+B,MAAOC,IAGTnC,EAAOmC,EAGTnC,EAAKb,OAAQ,EACbrK,KAAK8M,aAAeG,GAGtBhO,EAAKmL,SAAShL,QAAQ8B,UAAUyJ,OAAS,WACvC3K,KAAKmN,SAAS,IAGhBlO,EAAKmL,SAAShL,QAAQ8B,UAAUiM,SAAW,SAAUI,GACnD,IAAK,IAAI1I,EAAI7E,KAAK+M,eAAerL,OAAS,EAAGmD,GAAK0I,EAAQ1I,IAAK,CAC7D,IAAIqG,EAAOlL,KAAK+M,eAAelI,GAC3B2I,EAAWtC,EAAKkC,MAAM/M,WAEtBmN,KAAYxN,KAAKgN,eACnB9B,EAAKoC,OAAOhD,MAAMY,EAAKG,MAAQrL,KAAKgN,eAAeQ,IAInDtC,EAAKkC,MAAMlB,KAAOsB,EAElBxN,KAAKgN,eAAeQ,GAAYtC,EAAKkC,OAGvCpN,KAAK+M,eAAevB,QAwBxBvM,EAAKwO,MAAQ,SAAUC,GACrB1N,KAAK2N,cAAgBD,EAAMC,cAC3B3N,KAAK4N,aAAeF,EAAME,aAC1B5N,KAAK6N,SAAWH,EAAMG,SACtB7N,KAAK8N,OAASJ,EAAMI,OACpB9N,KAAKX,SAAWqO,EAAMrO,UAiExBJ,EAAKwO,MAAMvM,UAAU6M,OAAS,SAAUC,GACtC,OAAOhO,KAAKiO,MAAM,SAAUA,GACb,IAAIhP,EAAKiP,YAAYF,EAAaC,GACxCE,WA6BXlP,EAAKwO,MAAMvM,UAAU+M,MAAQ,SAAU9L,GAQrC,IAAI8L,EAAQ,IAAIhP,EAAKmP,MAAMpO,KAAK8N,QAC5BO,EAAiB7M,OAAOkC,OAAO,MAC/B4K,EAAe9M,OAAOkC,OAAO,MAC7B6K,EAAiB/M,OAAOkC,OAAO,MAEnCvB,EAAGxC,KAAKsO,EAAOA,GAEf,IAAK,IAAIpJ,EAAI,EAAGA,EAAIoJ,EAAMO,QAAQ9M,OAAQmD,IAAK,CAS7C,IAAIgG,EAASoD,EAAMO,QAAQ3J,GACvB4J,EAAQ,KAGVA,EADE5D,EAAO6D,YACD1O,KAAKX,SAAS+F,UAAUyF,EAAOE,MAE/B,CAACF,EAAOE,MAGlB,IAAK,IAAI4D,EAAI,EAAGA,EAAIF,EAAM/M,OAAQiN,IAAK,CACrC,IAAI5D,EAAO0D,EAAME,IASjB9D,EAAS+D,KAAKT,MAAMS,KAAKC,UAAUhE,KAC5BE,KAAOA,EAUd,IAHA,IAAI+D,EAAe7P,EAAKmL,SAASQ,WAAWC,GACxCkE,EAAgB/O,KAAK6N,SAASxB,UAAUyC,GAAc5H,UAEjDjC,EAAI,EAAGA,EAAI8J,EAAcrN,OAAQuD,IAAK,CAK3C,IAAI+J,EAAeD,EAAc9J,GAC7B5D,EAAUrB,KAAK2N,cAAcqB,GACjC,GAAI3N,EAKN,IAJM,IAAI4N,EAAY5N,EAAQ6N,OAIrBC,EAAI,EAAGA,EAAItE,EAAOiD,OAAOpM,OAAQyN,IAAK,CAS7C,IAAIC,EAAQvE,EAAOiD,OAAOqB,GACtBE,EAAehO,EAAQ+N,GACvBE,EAAuB9N,OAAOC,KAAK4N,GACnCE,EAAYP,EAAe,IAAMI,EAyBrC,QAf4BjO,IAAxBmN,EAAac,KACfd,EAAac,GAAS,IAAInQ,EAAKsG,QAQjC+I,EAAac,GAAOjJ,OAAO8I,EAAW,EAAIpE,EAAO2E,MAAO,SAAU7I,EAAGC,GAAK,OAAOD,EAAIC,KAMjF2H,EAAegB,GAAnB,CAIA,IAAK,IAAIE,EAAI,EAAGA,EAAIH,EAAqB5N,OAAQ+N,IAAK,CAOpD,IAGIC,EAHAC,EAAsBL,EAAqBG,GAC3CG,EAAmB,IAAI3Q,EAAKqB,SAAUqP,EAAqBP,GAC3DnN,EAAWoN,EAAaM,QAG4BxO,KAAnDuO,EAAarB,EAAeuB,IAC/BvB,EAAeuB,GAAoB,IAAI3Q,EAAK4Q,UAAWb,EAAcI,EAAOnN,GAE5EyN,EAAWpQ,IAAI0P,EAAcI,EAAOnN,GAKxCsM,EAAegB,IAAa,MAMpC,IAAIO,EAAoBtO,OAAOC,KAAK4M,GAChC0B,EAAU,GACVC,EAAUxO,OAAOkC,OAAO,MAE5B,IAASmB,EAAI,EAAGA,EAAIiL,EAAkBpO,OAAQmD,IAAK,CASjD,IAIIoL,EAJAjP,EAAW/B,EAAKqB,SAASM,WAAWkP,EAAkBjL,IACtDtE,EAASS,EAAST,OAClB2P,EAAclQ,KAAK4N,aAAa5M,GAChCmP,EAAQ7B,EAAatN,EAASR,WAAWyG,WAAWiJ,GAGxD,QAAqC/O,KAAhC8O,EAAWD,EAAQzP,IACtB0P,EAASE,OAASA,EAClBF,EAASG,UAAUC,QAAQhC,EAAerN,QACrC,CACL,IAAIkC,EAAQ,CACVoN,IAAK/P,EACL4P,MAAOA,EACPC,UAAW/B,EAAerN,IAE5BgP,EAAQzP,GAAU2C,EAClB6M,EAAQ3M,KAAKF,IAOjB,OAAO6M,EAAQ3D,KAAK,SAAUzF,EAAGC,GAC/B,OAAOA,EAAEuJ,MAAQxJ,EAAEwJ,SAYvBlR,EAAKwO,MAAMvM,UAAUoE,OAAS,WAC5B,IAAIqI,EAAgBnM,OAAOC,KAAKzB,KAAK2N,eAClCvB,OACA5J,IAAI,SAAUuI,GACb,MAAO,CAACA,EAAM/K,KAAK2N,cAAc5C,KAChC/K,MAED4N,EAAepM,OAAOC,KAAKzB,KAAK4N,cACjCpL,IAAI,SAAU8N,GACb,MAAO,CAACA,EAAKtQ,KAAK4N,aAAa0C,GAAKhL,WACnCtF,MAEL,MAAO,CACLH,QAASZ,EAAKY,QACdiO,OAAQ9N,KAAK8N,OACbF,aAAcA,EACdD,cAAeA,EACftO,SAAUW,KAAKX,SAASiG,WAU5BrG,EAAKwO,MAAM3J,KAAO,SAAUyM,GAC1B,IAAI7C,EAAQ,GACRE,EAAe,GACf4C,EAAoBD,EAAgB3C,aACpCD,EAAgB,GAChB8C,EAA0BF,EAAgB5C,cAC1C+C,EAAkB,IAAIzR,EAAKmL,SAAShL,QACpCC,EAAWJ,EAAKsE,SAASO,KAAKyM,EAAgBlR,UAE9CkR,EAAgB1Q,SAAWZ,EAAKY,SAClCZ,EAAKa,MAAMC,KAAK,4EAA8Ed,EAAKY,QAAU,sCAAwC0Q,EAAgB1Q,QAAU,KAGjL,IAAK,IAAIgF,EAAI,EAAGA,EAAI2L,EAAkB9O,OAAQmD,IAAK,CACjD,IACIyL,GADAK,EAAQH,EAAkB3L,IACd,GACZW,EAAWmL,EAAM,GAErB/C,EAAa0C,GAAO,IAAIrR,EAAKsG,OAAOC,GAGtC,IAASX,EAAI,EAAGA,EAAI4L,EAAwB/O,OAAQmD,IAAK,CACvD,IAAI8L,EACA5F,GADA4F,EAAQF,EAAwB5L,IACnB,GACbxD,EAAUsP,EAAM,GAEpBD,EAAgB1K,OAAO+E,GACvB4C,EAAc5C,GAAQ1J,EAYxB,OATAqP,EAAgB/F,SAEhB+C,EAAMI,OAASyC,EAAgBzC,OAE/BJ,EAAME,aAAeA,EACrBF,EAAMC,cAAgBA,EACtBD,EAAMG,SAAW6C,EAAgBrT,KACjCqQ,EAAMrO,SAAWA,EAEV,IAAIJ,EAAKwO,MAAMC,IA+BxBzO,EAAKG,QAAU,WACbY,KAAK4Q,KAAO,KACZ5Q,KAAK6Q,QAAU,GACf7Q,KAAK2N,cAAgBnM,OAAOkC,OAAO,MACnC1D,KAAK8Q,qBAAuB,GAC5B9Q,KAAK+Q,aAAe,GACpB/Q,KAAKqC,UAAYpD,EAAKoD,UACtBrC,KAAKX,SAAW,IAAIJ,EAAKsE,SACzBvD,KAAKN,eAAiB,IAAIT,EAAKsE,SAC/BvD,KAAKsB,cAAgB,EACrBtB,KAAKgR,GAAK,IACVhR,KAAKiR,IAAM,IACXjR,KAAKiP,UAAY,EACjBjP,KAAKkR,kBAAoB,IAe3BjS,EAAKG,QAAQ8B,UAAUoP,IAAM,SAAUA,GACrCtQ,KAAK4Q,KAAON,GAadrR,EAAKG,QAAQ8B,UAAUkO,MAAQ,SAAUA,GACvCpP,KAAK6Q,QAAQzN,KAAKgM,IAWpBnQ,EAAKG,QAAQ8B,UAAU0F,EAAI,SAAUuK,GAEjCnR,KAAKgR,GADHG,EAAS,EACD,EACDA,EAAS,EACR,EAEAA,GAWdlS,EAAKG,QAAQ8B,UAAUkQ,GAAK,SAAUD,GACpCnR,KAAKiR,IAAME,GAeblS,EAAKG,QAAQ8B,UAAU5B,IAAM,SAAU+R,GACrC,IAAI9Q,EAAS8Q,EAAIrR,KAAK4Q,MAEtB5Q,KAAKsB,eAAiB,EAEtB,IAAK,IAAIuD,EAAI,EAAGA,EAAI7E,KAAK6Q,QAAQnP,OAAQmD,IAAK,CAC5C,IAAIrE,EAAYR,KAAK6Q,QAAQhM,GACzBuK,EAAQiC,EAAI7Q,GACZqC,EAAS7C,KAAKqC,UAAU+M,GACxBX,EAAQzO,KAAKX,SAASsF,IAAI9B,GAC1B7B,EAAW,IAAI/B,EAAKqB,SAAUC,EAAQC,GACtC8Q,EAAa9P,OAAOkC,OAAO,MAE/B1D,KAAK8Q,qBAAqB9P,GAAYsQ,EACtCtR,KAAK+Q,aAAa/P,GAAY,EAG9BhB,KAAK+Q,aAAa/P,IAAayN,EAAM/M,OAGrC,IAAK,IAAIuD,EAAI,EAAGA,EAAIwJ,EAAM/M,OAAQuD,IAAK,CACrC,IAAI8F,EAAO0D,EAAMxJ,GAUjB,GARwB9D,MAApBmQ,EAAWvG,KACbuG,EAAWvG,GAAQ,GAGrBuG,EAAWvG,IAAS,EAIY5J,MAA5BnB,KAAK2N,cAAc5C,GAAoB,CACzC,IAAI1J,EAAUG,OAAOkC,OAAO,MAC5BrC,EAAgB,OAAIrB,KAAKiP,UACzBjP,KAAKiP,WAAa,EAElB,IAAK,IAAIE,EAAI,EAAGA,EAAInP,KAAK6Q,QAAQnP,OAAQyN,IACvC9N,EAAQrB,KAAK6Q,QAAQ1B,IAAM3N,OAAOkC,OAAO,MAG3C1D,KAAK2N,cAAc5C,GAAQ1J,EAIsBF,MAA/CnB,KAAK2N,cAAc5C,GAAMvK,GAAWD,KACtCP,KAAK2N,cAAc5C,GAAMvK,GAAWD,GAAUiB,OAAOkC,OAAO,OAK9D,IAAK,IAAI+L,EAAI,EAAGA,EAAIzP,KAAKkR,kBAAkBxP,OAAQ+N,IAAK,CACtD,IAAI8B,EAAcvR,KAAKkR,kBAAkBzB,GACrCxN,EAAW8I,EAAK9I,SAASsP,GAEmCpQ,MAA5DnB,KAAK2N,cAAc5C,GAAMvK,GAAWD,GAAQgR,KAC9CvR,KAAK2N,cAAc5C,GAAMvK,GAAWD,GAAQgR,GAAe,IAG7DvR,KAAK2N,cAAc5C,GAAMvK,GAAWD,GAAQgR,GAAanO,KAAKnB,OAYtEhD,EAAKG,QAAQ8B,UAAUsQ,6BAA+B,WAOpD,IALA,IAAIC,EAAYjQ,OAAOC,KAAKzB,KAAK+Q,cAC7BW,EAAiBD,EAAU/P,OAC3BiQ,EAAc,GACdC,EAAqB,GAEhB/M,EAAI,EAAGA,EAAI6M,EAAgB7M,IAAK,CACvC,IAAI7D,EAAW/B,EAAKqB,SAASM,WAAW6Q,EAAU5M,IAGlD+M,EAFIxC,EAAQpO,EAASR,aAESoR,EAAmBxC,GAAS,GAC1DwC,EAAmBxC,IAAU,EAE7BuC,EAAYvC,KAAWuC,EAAYvC,GAAS,GAC5CuC,EAAYvC,IAAUpP,KAAK+Q,aAAa/P,GAG1C,IAAS6D,EAAI,EAAGA,EAAI7E,KAAK6Q,QAAQnP,OAAQmD,IAAK,CAC5C,IAAIuK,EACJuC,EADIvC,EAAQpP,KAAK6Q,QAAQhM,IACJ8M,EAAYvC,GAASwC,EAAmBxC,GAG/DpP,KAAK6R,mBAAqBF,GAQ5B1S,EAAKG,QAAQ8B,UAAU4Q,mBAAqB,WAM1C,IALA,IAAIlE,EAAe,GACf6D,EAAYjQ,OAAOC,KAAKzB,KAAK8Q,sBAC7BiB,EAAkBN,EAAU/P,OAC5BsQ,EAAexQ,OAAOkC,OAAO,MAExBmB,EAAI,EAAGA,EAAIkN,EAAiBlN,IAAK,CASxC,IARA,IAAI7D,EAAW/B,EAAKqB,SAASM,WAAW6Q,EAAU5M,IAC9CuK,EAAQpO,EAASR,UACjByR,EAAcjS,KAAK+Q,aAAa/P,GAChCkP,EAAc,IAAIjR,EAAKsG,OACvB2M,EAAkBlS,KAAK8Q,qBAAqB9P,GAC5CyN,EAAQjN,OAAOC,KAAKyQ,GACpBC,EAAc1D,EAAM/M,OAEfuD,EAAI,EAAGA,EAAIkN,EAAalN,IAAK,CACpC,IAGI7D,EAAK+O,EAAOiC,EAHZrH,EAAO0D,EAAMxJ,GACboN,EAAKH,EAAgBnH,GACrBkE,EAAYjP,KAAK2N,cAAc5C,GAAMmE,YAGd/N,IAAvB6Q,EAAajH,IACf3J,EAAMnC,EAAKmC,IAAIpB,KAAK2N,cAAc5C,GAAO/K,KAAKsB,eAC9C0Q,EAAajH,GAAQ3J,GAErBA,EAAM4Q,EAAajH,GAGrBoF,EAAQ/O,IAAQpB,KAAKiR,IAAM,GAAKoB,IAAOrS,KAAKiR,KAAO,EAAIjR,KAAKgR,GAAKhR,KAAKgR,IAAMiB,EAAcjS,KAAK6R,mBAAmBzC,KAAWiD,GAC7HD,EAAqBxQ,KAAK0Q,MAAc,IAARnC,GAAgB,IAQhDD,EAAYlK,OAAOiJ,EAAWmD,GAGhCxE,EAAa5M,GAAYkP,EAG3BlQ,KAAK4N,aAAeA,GAQtB3O,EAAKG,QAAQ8B,UAAUqR,eAAiB,WACtCvS,KAAK6N,SAAW5O,EAAKmL,SAASK,UAC5BjJ,OAAOC,KAAKzB,KAAK2N,eAAevB,SAYpCnN,EAAKG,QAAQ8B,UAAUtB,MAAQ,WAK7B,OAJAI,KAAKwR,+BACLxR,KAAK8R,qBACL9R,KAAKuS,iBAEE,IAAItT,EAAKwO,MAAM,CACpBE,cAAe3N,KAAK2N,cACpBC,aAAc5N,KAAK4N,aACnBC,SAAU7N,KAAK6N,SACfC,OAAQ9N,KAAK6Q,QACbxR,SAAUW,KAAKN,kBAkBnBT,EAAKG,QAAQ8B,UAAUsR,IAAM,SAAUrQ,GACrC,IAAIsQ,EAAOnQ,MAAMpB,UAAUD,MAAMtB,KAAKwE,UAAW,GACjDsO,EAAKC,QAAQ1S,MACbmC,EAAGwQ,MAAM3S,KAAMyS,IAcjBxT,EAAK4Q,UAAY,SAAU9E,EAAMqE,EAAOnN,GAStC,IARA,IAAI2Q,EAAiBpR,OAAOkC,OAAO,MAC/BmP,EAAerR,OAAOC,KAAKQ,GAOtB4C,EAAI,EAAGA,EAAIgO,EAAanR,OAAQmD,IAAK,CAC5C,IAAIiO,EAAMD,EAAahO,GACvB+N,EAAeE,GAAO7Q,EAAS6Q,GAAK7R,QAGtCjB,KAAKiC,SAAWT,OAAOkC,OAAO,MAC9B1D,KAAKiC,SAAS8I,GAAQvJ,OAAOkC,OAAO,MACpC1D,KAAKiC,SAAS8I,GAAMqE,GAASwD,GAY/B3T,EAAK4Q,UAAU3O,UAAUmP,QAAU,SAAU0C,GAG3C,IAFA,IAAItE,EAAQjN,OAAOC,KAAKsR,EAAe9Q,UAE9B4C,EAAI,EAAGA,EAAI4J,EAAM/M,OAAQmD,IAAK,CACrC,IAAIkG,EAAO0D,EAAM5J,GACbiJ,EAAStM,OAAOC,KAAKsR,EAAe9Q,SAAS8I,IAEtB5J,MAAvBnB,KAAKiC,SAAS8I,KAChB/K,KAAKiC,SAAS8I,GAAQvJ,OAAOkC,OAAO,OAGtC,IAAK,IAAIuB,EAAI,EAAGA,EAAI6I,EAAOpM,OAAQuD,IAAK,CACtC,IAAImK,EAAQtB,EAAO7I,GACfxD,EAAOD,OAAOC,KAAKsR,EAAe9Q,SAAS8I,GAAMqE,IAEnBjO,MAA9BnB,KAAKiC,SAAS8I,GAAMqE,KACtBpP,KAAKiC,SAAS8I,GAAMqE,GAAS5N,OAAOkC,OAAO,OAG7C,IAAK,IAAIyL,EAAI,EAAGA,EAAI1N,EAAKC,OAAQyN,IAAK,CACpC,IAAI2D,EAAMrR,EAAK0N,GAEwBhO,MAAnCnB,KAAKiC,SAAS8I,GAAMqE,GAAO0D,GAC7B9S,KAAKiC,SAAS8I,GAAMqE,GAAO0D,GAAOC,EAAe9Q,SAAS8I,GAAMqE,GAAO0D,GAEvE9S,KAAKiC,SAAS8I,GAAMqE,GAAO0D,GAAO9S,KAAKiC,SAAS8I,GAAMqE,GAAO0D,GAAK3N,OAAO4N,EAAe9Q,SAAS8I,GAAMqE,GAAO0D,QAexH7T,EAAK4Q,UAAU3O,UAAU5B,IAAM,SAAUyL,EAAMqE,EAAOnN,GACpD,KAAM8I,KAAQ/K,KAAKiC,UAGjB,OAFAjC,KAAKiC,SAAS8I,GAAQvJ,OAAOkC,OAAO,WACpC1D,KAAKiC,SAAS8I,GAAMqE,GAASnN,GAI/B,GAAMmN,KAASpP,KAAKiC,SAAS8I,GAO7B,IAFA,IAAI8H,EAAerR,OAAOC,KAAKQ,GAEtB4C,EAAI,EAAGA,EAAIgO,EAAanR,OAAQmD,IAAK,CAC5C,IAAIiO,EAAMD,EAAahO,GAEnBiO,KAAO9S,KAAKiC,SAAS8I,GAAMqE,GAC7BpP,KAAKiC,SAAS8I,GAAMqE,GAAO0D,GAAO9S,KAAKiC,SAAS8I,GAAMqE,GAAO0D,GAAK3N,OAAOlD,EAAS6Q,IAElF9S,KAAKiC,SAAS8I,GAAMqE,GAAO0D,GAAO7Q,EAAS6Q,QAZ7C9S,KAAKiC,SAAS8I,GAAMqE,GAASnN,GA2BjChD,EAAKmP,MAAQ,SAAU4E,GACrBhT,KAAKwO,QAAU,GACfxO,KAAKgT,UAAYA,GA0BnB/T,EAAKmP,MAAM6E,SAAW,IAAIC,OAAQ,KAClCjU,EAAKmP,MAAM6E,SAASE,KAAO,EAC3BlU,EAAKmP,MAAM6E,SAASG,QAAU,EAC9BnU,EAAKmP,MAAM6E,SAASI,SAAW,EAwB/BpU,EAAKmP,MAAMlN,UAAU2J,OAAS,SAAUA,GA2BtC,MA1BM,WAAYA,IAChBA,EAAOiD,OAAS9N,KAAKgT,WAGjB,UAAWnI,IACfA,EAAO2E,MAAQ,GAGX,gBAAiB3E,IACrBA,EAAO6D,aAAc,GAGjB,aAAc7D,IAClBA,EAAOoI,SAAWhU,EAAKmP,MAAM6E,SAASE,MAGnCtI,EAAOoI,SAAWhU,EAAKmP,MAAM6E,SAASG,SAAavI,EAAOE,KAAK9H,OAAO,IAAMhE,EAAKmP,MAAM6E,WAC1FpI,EAAOE,KAAO,IAAMF,EAAOE,MAGxBF,EAAOoI,SAAWhU,EAAKmP,MAAM6E,SAASI,UAAcxI,EAAOE,KAAK9J,OAAO,IAAMhC,EAAKmP,MAAM6E,WAC3FpI,EAAOE,KAAYF,EAAOE,KAAO,KAGnC/K,KAAKwO,QAAQpL,KAAKyH,GAEX7K,MAqBTf,EAAKmP,MAAMlN,UAAU6J,KAAO,SAAUA,EAAMuI,GAC1C,IAAIzI,EAASyI,GAAW,GAKxB,OAJAzI,EAAOE,KAAOA,EAEd/K,KAAK6K,OAAOA,GAEL7K,MAETf,EAAKsU,gBAAkB,SAAUtT,EAAS0F,EAAOC,GAC/C5F,KAAKwT,KAAO,kBACZxT,KAAKC,QAAUA,EACfD,KAAK2F,MAAQA,EACb3F,KAAK4F,IAAMA,GAGb3G,EAAKsU,gBAAgBrS,UAAY,IAAIgD,MACrCjF,EAAKwU,WAAa,SAAUzR,GAC1BhC,KAAK0T,QAAU,GACf1T,KAAKgC,IAAMA,EACXhC,KAAK0B,OAASM,EAAIN,OAClB1B,KAAKuE,IAAM,EACXvE,KAAK2F,MAAQ,EACb3F,KAAK2T,oBAAsB,IAG7B1U,EAAKwU,WAAWvS,UAAUyD,IAAM,WAG9B,IAFA,IAAIiP,EAAQ3U,EAAKwU,WAAWI,QAErBD,GACLA,EAAQA,EAAM5T,OAIlBf,EAAKwU,WAAWvS,UAAU4S,YAAc,WAKtC,IAJA,IAAIC,EAAY,GACZhR,EAAa/C,KAAK2F,MAClB7C,EAAW9C,KAAKuE,IAEXM,EAAI,EAAGA,EAAI7E,KAAK2T,oBAAoBjS,OAAQmD,IACnD/B,EAAW9C,KAAK2T,oBAAoB9O,GACpCkP,EAAU3Q,KAAKpD,KAAKgC,IAAIf,MAAM8B,EAAYD,IAC1CC,EAAaD,EAAW,EAM1B,OAHAiR,EAAU3Q,KAAKpD,KAAKgC,IAAIf,MAAM8B,EAAY/C,KAAKuE,MAC/CvE,KAAK2T,oBAAoBjS,OAAS,EAE3BqS,EAAUC,KAAK,KAGxB/U,EAAKwU,WAAWvS,UAAU+S,KAAO,SAAUC,GACzClU,KAAK0T,QAAQtQ,KAAK,CAChB8Q,KAAMA,EACNlS,IAAKhC,KAAK8T,cACVnO,MAAO3F,KAAK2F,MACZC,IAAK5F,KAAKuE,MAGZvE,KAAK2F,MAAQ3F,KAAKuE,KAGpBtF,EAAKwU,WAAWvS,UAAUiT,gBAAkB,WAC1CnU,KAAK2T,oBAAoBvQ,KAAKpD,KAAKuE,IAAM,GACzCvE,KAAKuE,KAAO,GAGdtF,EAAKwU,WAAWvS,UAAU6K,KAAO,WAC/B,GAAI/L,KAAKuE,KAAOvE,KAAK0B,OACnB,OAAOzC,EAAKwU,WAAWW,IAGzB,IAAI/I,EAAOrL,KAAKgC,IAAIiB,OAAOjD,KAAKuE,KAEhC,OADAvE,KAAKuE,KAAO,EACL8G,GAGTpM,EAAKwU,WAAWvS,UAAUmT,MAAQ,WAChC,OAAOrU,KAAKuE,IAAMvE,KAAK2F,OAGzB1G,EAAKwU,WAAWvS,UAAUoT,OAAS,WAC7BtU,KAAK2F,OAAS3F,KAAKuE,MACrBvE,KAAKuE,KAAO,GAGdvE,KAAK2F,MAAQ3F,KAAKuE,KAGpBtF,EAAKwU,WAAWvS,UAAUqT,OAAS,WACjCvU,KAAKuE,KAAO,GAGdtF,EAAKwU,WAAWvS,UAAUsT,eAAiB,WACzC,IAAInJ,EAAMoJ,EAEV,GAEEA,GADApJ,EAAOrL,KAAK+L,QACI2I,WAAW,SACpBD,EAAW,IAAMA,EAAW,IAEjCpJ,GAAQpM,EAAKwU,WAAWW,KAC1BpU,KAAKuU,UAITtV,EAAKwU,WAAWvS,UAAUyT,KAAO,WAC/B,OAAO3U,KAAKuE,IAAMvE,KAAK0B,QAGzBzC,EAAKwU,WAAWW,IAAM,MACtBnV,EAAKwU,WAAWmB,MAAQ,QACxB3V,EAAKwU,WAAWoB,KAAO,OACvB5V,EAAKwU,WAAWqB,cAAgB,gBAChC7V,EAAKwU,WAAWsB,MAAQ,QAExB9V,EAAKwU,WAAWuB,SAAW,SAAUC,GAInC,OAHAA,EAAMV,SACNU,EAAMhB,KAAKhV,EAAKwU,WAAWmB,OAC3BK,EAAMX,SACCrV,EAAKwU,WAAWI,SAGzB5U,EAAKwU,WAAWyB,QAAU,SAAUD,GAQlC,GAPIA,EAAMZ,QAAU,IAClBY,EAAMV,SACNU,EAAMhB,KAAKhV,EAAKwU,WAAWoB,OAG7BI,EAAMX,SAEFW,EAAMN,OACR,OAAO1V,EAAKwU,WAAWI,SAI3B5U,EAAKwU,WAAW0B,gBAAkB,SAAUF,GAI1C,OAHAA,EAAMX,SACNW,EAAMT,iBACNS,EAAMhB,KAAKhV,EAAKwU,WAAWqB,eACpB7V,EAAKwU,WAAWI,SAGzB5U,EAAKwU,WAAW2B,SAAW,SAAUH,GAInC,OAHAA,EAAMX,SACNW,EAAMT,iBACNS,EAAMhB,KAAKhV,EAAKwU,WAAWsB,OACpB9V,EAAKwU,WAAWI,SAGzB5U,EAAKwU,WAAW4B,OAAS,SAAUJ,GAC7BA,EAAMZ,QAAU,GAClBY,EAAMhB,KAAKhV,EAAKwU,WAAWoB,OAe/B5V,EAAKwU,WAAW6B,cAAgBrW,EAAKoD,UAAUc,UAE/ClE,EAAKwU,WAAWI,QAAU,SAAUoB,GAClC,OAAa,CACX,IAAI5J,EAAO4J,EAAMlJ,OAEjB,GAAIV,GAAQpM,EAAKwU,WAAWW,IAC1B,OAAOnV,EAAKwU,WAAW4B,OAIzB,GAA0B,IAAtBhK,EAAKqJ,WAAW,GAApB,CAKA,GAAY,KAARrJ,EACF,OAAOpM,EAAKwU,WAAWuB,SAGzB,GAAY,KAAR3J,EAKF,OAJA4J,EAAMV,SACFU,EAAMZ,QAAU,GAClBY,EAAMhB,KAAKhV,EAAKwU,WAAWoB,MAEtB5V,EAAKwU,WAAW0B,gBAGzB,GAAY,KAAR9J,EAKF,OAJA4J,EAAMV,SACFU,EAAMZ,QAAU,GAClBY,EAAMhB,KAAKhV,EAAKwU,WAAWoB,MAEtB5V,EAAKwU,WAAW2B,SAGzB,GAAI/J,EAAKnI,MAAMjE,EAAKwU,WAAW6B,eAC7B,OAAOrW,EAAKwU,WAAWyB,aAzBvBD,EAAMd,oBA8BZlV,EAAKiP,YAAc,SAAUlM,EAAKiM,GAChCjO,KAAKiV,MAAQ,IAAIhW,EAAKwU,WAAYzR,GAClChC,KAAKiO,MAAQA,EACbjO,KAAKuV,cAAgB,GACrBvV,KAAKwV,UAAY,GAGnBvW,EAAKiP,YAAYhN,UAAUiN,MAAQ,WACjCnO,KAAKiV,MAAMtQ,MACX3E,KAAK0T,QAAU1T,KAAKiV,MAAMvB,QAI1B,IAFA,IAAIE,EAAQ3U,EAAKiP,YAAYuH,iBAEtB7B,GACLA,EAAQA,EAAM5T,MAGhB,OAAOA,KAAKiO,OAGdhP,EAAKiP,YAAYhN,UAAUwU,WAAa,WACtC,OAAO1V,KAAK0T,QAAQ1T,KAAKwV,YAG3BvW,EAAKiP,YAAYhN,UAAUyU,cAAgB,WACzC,IAAIC,EAAS5V,KAAK0V,aAElB,OADA1V,KAAKwV,WAAa,EACXI,GAGT3W,EAAKiP,YAAYhN,UAAU2U,WAAa,WACtC,IAAIC,EAAkB9V,KAAKuV,cAC3BvV,KAAKiO,MAAMpD,OAAOiL,GAClB9V,KAAKuV,cAAgB,IAGvBtW,EAAKiP,YAAYuH,iBAAmB,SAAUM,GAC5C,IAAIH,EAASG,EAAOL,aAEpB,GAAcvU,MAAVyU,EAIJ,OAAQA,EAAO1B,MACb,KAAKjV,EAAKwU,WAAWmB,MACnB,OAAO3V,EAAKiP,YAAY8H,WAC1B,KAAK/W,EAAKwU,WAAWoB,KACnB,OAAO5V,EAAKiP,YAAY+H,UAC1B,QACE,IAAIC,EAAe,4CAA8CN,EAAO1B,KAMxE,MAJI0B,EAAO5T,IAAIN,QAAU,IACvBwU,GAAgB,gBAAkBN,EAAO5T,IAAM,KAG3C,IAAI/C,EAAKsU,gBAAiB2C,EAAcN,EAAOjQ,MAAOiQ,EAAOhQ,OAIzE3G,EAAKiP,YAAY8H,WAAa,SAAUD,GACtC,IAAIH,EAASG,EAAOJ,gBAEpB,GAAcxU,MAAVyU,EAAJ,CAIA,IAAmD,GAA/CG,EAAO9H,MAAM+E,UAAUjS,QAAQ6U,EAAO5T,KAAY,CACpD,IAAImU,EAAiBJ,EAAO9H,MAAM+E,UAAUxQ,IAAI,SAAU4T,GAAK,MAAO,IAAMA,EAAI,MAAOpC,KAAK,MACxFkC,EAAe,uBAAyBN,EAAO5T,IAAM,uBAAyBmU,EAElF,MAAM,IAAIlX,EAAKsU,gBAAiB2C,EAAcN,EAAOjQ,MAAOiQ,EAAOhQ,KAGrEmQ,EAAOR,cAAczH,OAAS,CAAC8H,EAAO5T,KAEtC,IAAIqU,EAAaN,EAAOL,aAExB,GAAkBvU,MAAdkV,EAAyB,CACvBH,EAAe,gCACnB,MAAM,IAAIjX,EAAKsU,gBAAiB2C,EAAcN,EAAOjQ,MAAOiQ,EAAOhQ,KAGrE,OAAQyQ,EAAWnC,MACjB,KAAKjV,EAAKwU,WAAWoB,KACnB,OAAO5V,EAAKiP,YAAY+H,UAC1B,QACMC,EAAe,0BAA4BG,EAAWnC,KAAO,IACjE,MAAM,IAAIjV,EAAKsU,gBAAiB2C,EAAcG,EAAW1Q,MAAO0Q,EAAWzQ,QAIjF3G,EAAKiP,YAAY+H,UAAY,SAAUF,GACrC,IAAIH,EAASG,EAAOJ,gBAEpB,GAAcxU,MAAVyU,EAAJ,CAIAG,EAAOR,cAAcxK,KAAO6K,EAAO5T,IAAIU,eAEP,GAA5BkT,EAAO5T,IAAIjB,QAAQ,OACrBgV,EAAOR,cAAc7G,aAAc,GAGrC,IAAI2H,EAAaN,EAAOL,aAExB,GAAkBvU,MAAdkV,EAKJ,OAAQA,EAAWnC,MACjB,KAAKjV,EAAKwU,WAAWoB,KAEnB,OADAkB,EAAOF,aACA5W,EAAKiP,YAAY+H,UAC1B,KAAKhX,EAAKwU,WAAWmB,MAEnB,OADAmB,EAAOF,aACA5W,EAAKiP,YAAY8H,WAC1B,KAAK/W,EAAKwU,WAAWqB,cACnB,OAAO7V,EAAKiP,YAAYoI,kBAC1B,KAAKrX,EAAKwU,WAAWsB,MACnB,OAAO9V,EAAKiP,YAAYqI,WAC1B,QACE,IAAIL,EAAe,2BAA6BG,EAAWnC,KAAO,IAClE,MAAM,IAAIjV,EAAKsU,gBAAiB2C,EAAcG,EAAW1Q,MAAO0Q,EAAWzQ,UAjB7EmQ,EAAOF,eAqBX5W,EAAKiP,YAAYoI,kBAAoB,SAAUP,GAC7C,IAAIH,EAASG,EAAOJ,gBAEpB,GAAcxU,MAAVyU,EAAJ,CAIA,IAAI5K,EAAewL,SAASZ,EAAO5T,IAAK,IAExC,GAAIyU,MAAMzL,GAAe,CACvB,IAAIkL,EAAe,gCACnB,MAAM,IAAIjX,EAAKsU,gBAAiB2C,EAAcN,EAAOjQ,MAAOiQ,EAAOhQ,KAGrEmQ,EAAOR,cAAcvK,aAAeA,EAEpC,IAAIqL,EAAaN,EAAOL,aAExB,GAAkBvU,MAAdkV,EAKJ,OAAQA,EAAWnC,MACjB,KAAKjV,EAAKwU,WAAWoB,KAEnB,OADAkB,EAAOF,aACA5W,EAAKiP,YAAY+H,UAC1B,KAAKhX,EAAKwU,WAAWmB,MAEnB,OADAmB,EAAOF,aACA5W,EAAKiP,YAAY8H,WAC1B,KAAK/W,EAAKwU,WAAWqB,cACnB,OAAO7V,EAAKiP,YAAYoI,kBAC1B,KAAKrX,EAAKwU,WAAWsB,MACnB,OAAO9V,EAAKiP,YAAYqI,WAC1B,QACML,EAAe,2BAA6BG,EAAWnC,KAAO,IAClE,MAAM,IAAIjV,EAAKsU,gBAAiB2C,EAAcG,EAAW1Q,MAAO0Q,EAAWzQ,UAjB7EmQ,EAAOF,eAqBX5W,EAAKiP,YAAYqI,WAAa,SAAUR,GACtC,IAAIH,EAASG,EAAOJ,gBAEpB,GAAcxU,MAAVyU,EAAJ,CAIA,IAAIpG,EAAQgH,SAASZ,EAAO5T,IAAK,IAEjC,GAAIyU,MAAMjH,GAAQ,CAChB,IAAI0G,EAAe,wBACnB,MAAM,IAAIjX,EAAKsU,gBAAiB2C,EAAcN,EAAOjQ,MAAOiQ,EAAOhQ,KAGrEmQ,EAAOR,cAAc/F,MAAQA,EAE7B,IAAI6G,EAAaN,EAAOL,aAExB,GAAkBvU,MAAdkV,EAKJ,OAAQA,EAAWnC,MACjB,KAAKjV,EAAKwU,WAAWoB,KAEnB,OADAkB,EAAOF,aACA5W,EAAKiP,YAAY+H,UAC1B,KAAKhX,EAAKwU,WAAWmB,MAEnB,OADAmB,EAAOF,aACA5W,EAAKiP,YAAY8H,WAC1B,KAAK/W,EAAKwU,WAAWqB,cACnB,OAAO7V,EAAKiP,YAAYoI,kBAC1B,KAAKrX,EAAKwU,WAAWsB,MACnB,OAAO9V,EAAKiP,YAAYqI,WAC1B,QACML,EAAe,2BAA6BG,EAAWnC,KAAO,IAClE,MAAM,IAAIjV,EAAKsU,gBAAiB2C,EAAcG,EAAW1Q,MAAO0Q,EAAWzQ,UAjB7EmQ,EAAOF,eAyBGxY,EAeV2C,KAfgB1C,EAeV,WAMN,OAAO2B,GApBe,mBAAXyX,QAAyBA,OAAOC,IAEzCD,OAAOpZ,GACqB,iBAAZsZ,QAMhBC,OAAOD,QAAUtZ,IAGjBD,EAAK4B,KAAO3B,IAr5FjB,GAm6FSD,EAUR2C,KAVc1C,EAUR,SAASD,GAEb,SAAS2G,EAAS8S,EAAO3U,GAAO,IAAI0C,EAAGnD,EAGnC,IAFAmD,GAAK,EACLnD,EAASoV,EAAMpV,SACLmD,EAAInD,GACVS,EAAI2U,EAAOjS,GAAKA,EAAGiS,GAG3B,SAAStU,EAAKsU,EAAO3U,GAAO,IAAI+C,EAK5B,OAJAA,EAAS5C,MAAOwU,EAAMpV,QACtBsC,EAAS8S,EAAO,SAAW5Q,EAAKrB,EAAGiS,GAC/B5R,EAAO9B,KAAMjB,EAAI+D,EAAKrB,EAAGiS,MAEtB5R,EAGX,SAASJ,EAAQgS,EAAO3U,EAAIwP,GAIxB,OAHA3N,EAAS8S,EAAO,SAAU5Q,EAAKrB,EAAGiS,GAC9BnF,EAAcxP,EAAI+D,EAAKrB,EAAGiS,KAEvBnF,EAIX,SAASoF,EAAQ/U,EAAKgV,GAClB,OAAOhV,EAAIiB,OAAO+T,GAItB,SAASC,EAAevM,EAAKsM,GACzB,OAAOtM,EAAIsM,GAIf,SAASE,EAAaC,EAAOC,GACzB,IAAIC,EAAUC,EAASC,EAAQC,EAE/B,GAAqB,iBAAVL,GAAuC,iBAAVC,EACpCI,EAAUT,MACP,CAAA,GAAqB,iBAAVI,GAAuC,iBAAVC,EAG3C,KAAM,wDAFNI,EAAUP,EAQd,OAHAM,EAASvX,KAAKyX,QAAU,GAGnBN,GAASC,EACHpX,KAAK0X,SAAW,EACR,IAATP,EACCnX,KAAK0X,SAAWN,EAAM1V,OACd,IAAT0V,EACCpX,KAAK0X,SAAWP,EAAMzV,QAG7B2V,EAAW,CAAE,GACbrT,EAASmT,EAAO,SAAUzZ,EAAGmH,GAAWwS,IAALxS,GAAqBA,IAExD0S,EAAO,GAAKF,EACZrT,EAASoT,EAAO,SAAUO,EAAOC,GAC7BN,EAAU,GAAIM,GACd5T,EAASmT,EAAO,SAAUU,EAAOC,GAExBN,EAAQL,IADbW,EAC4B,IAAMN,EAAQJ,EAAOQ,EAAQ,GACrDN,EAASQ,GAAUT,EAAUS,EAAQ,GAErCR,EAASQ,GAAUlW,KAAKmW,IAClBV,EAAUS,GAAU,EACpBR,EAASQ,EAAQ,GAAM,EACvBT,EAAUS,EAAQ,GAAM,KAGtCT,EAAWC,EACXC,EAAQA,EAAO7V,QAAW2V,IAGvBrX,KAAK0X,SAAWJ,EAASA,EAAQ5V,OAAS,IA+DzD,OA3DAwV,EAAYhW,UAAUb,SAAW6W,EAAYhW,UAAU8W,QAAU,SAAmBC,GAAa,IAAIV,EAAQW,EAAKC,EAAMC,EAQpH,IANAF,EAAMpT,EADNyS,EAASvX,KAAKqY,YACO,SAAU1J,EAAG2J,GAC9B,OAAO1W,KAAKsW,IAAKvJ,EAAG7J,EAAQwT,EAAG1W,KAAKsW,IAAK,KAC1C,GACHC,EAAO7V,OAAS4V,EAAM,IAAKxW,QAASsS,KAAM,KAE1CoE,EAAM,GACEA,EAAI1W,QAAU6V,EAAO,IAAMA,EAAO,GAAG7V,QAAU,IACnD0W,EAAKA,EAAI1W,QAAWY,MAAO6V,EAAKzW,OAAS,GAAIsS,KAAM,KAUvD,OATAoE,EAAMA,EAAIpE,KAAM,MAAS,IAElBxR,EAAK+U,EAAQ,SAAUgB,GAI1B,OAHQ/V,EAAK+V,EAAK,SAAUC,GACxB,OAASL,EAAOK,GAAOvX,OAASkX,EAAKzW,UAE5BsS,KAAM,MAAS,MAGpBA,KAAM,KAAOoE,EAAM,OAInClB,EAAYhW,UAAUuX,SAAW,WAC7B,IAAIC,EAAOnB,EAAQ5V,EAAGgX,EAAGC,EAAGnJ,EAAGoJ,EAAGd,EAKlC,IAJAW,EAAQ,GAER/W,GADA4V,EAASvX,KAAKqY,aACH3W,OAAS,EACpBiX,EAAIpB,EAAO,GAAG7V,OAAS,EACX,IAANC,GAAiB,IAANgX,GACbC,EAAID,EAAI,EAAIpB,EAAO5V,GAAGgX,EAAE,GAAKG,OAAOC,UACpCtJ,EAAI9N,EAAI,EAAI4V,EAAO5V,EAAE,GAAGgX,GAAKG,OAAOC,UACpCF,EAAIF,EAAI,GAAKhX,EAAI,EAAI4V,EAAO5V,EAAE,GAAGgX,EAAE,GAAKG,OAAOC,WAC/ChB,EAAMnW,KAAKmW,IAAIa,EAAGnJ,EAAGoJ,MACVA,GACJA,EAAItB,EAAO5V,GAAGgX,IACbD,EAAMtV,KAAK,CAAC,aAAcuV,EAAGhX,IAEjCA,IACAgX,KACMZ,IAAQtI,GACdiJ,EAAMtV,KAAK,CAAC,SAAUuV,EAAGhX,IACzBA,MAEA+W,EAAMtV,KAAK,CAAC,SAAUuV,EAAGhX,IACzBgX,KAGR,OAAOD,GAGXxB,EAAYhW,UAAUmX,UAAY,WAC9B,OAAOrY,KAAKyX,QAAQxW,SAGxBiW,EAAYhW,UAAU8X,QAAU,WAC5B,OAAOhZ,KAAK0X,UAGTR,GAtJc,mBAAVR,QAA6C,iBAAdA,OAAOC,KAAmBD,OAAOC,IACvED,OAAO,WACH,OAAOpZ,MAEa,iBAAVuZ,QAAsBA,QAAUA,OAAOD,QACrDC,OAAOD,QAAUtZ,IAEjBD,EAAK6Z,YAAc5Z,IAqJ1BF,EAAE+E,GAAG8W,YAAe,SAAU3F,GAG7B,IAAI4F,EAAS9b,EAAE+b,OAAQ,GAAI/b,EAAE+E,GAAG8W,YAAYG,SAAU9F,GACtD,GAAI4F,EAAKnJ,QAGR,OADAsJ,EAAcC,KAAMtZ,KAAOkZ,GACpBG,GAMTjc,EAAE+E,GAAG8W,YAAYG,SAAW,CAC3BG,aAAgB,EAChBC,YAAe,EACfC,SAAa,EACbC,gBAAmB,oHACnBC,cAAiB,2CACjBC,mBAAoB,EACpBC,iBAAmB,EACnBpV,QAAY,EACZqV,YAAe,EACfC,cAAgB,EAChBC,QAAa,GACbC,mBAAoB,EACpBC,gBAAkB,EAClBC,cAAgB,EAChBC,mBAAoB,GAErB,IAMIC,EAAgB,SAASrY,GAC5B,OAAOA,EAAI6H,QAAQ,MAAO,IAAIA,QAAQ,MAAO,MAG1CyQ,EAAgB,KAKhBC,EAAY,WACfnd,EAAE,mBAAmBod,KAAK,WACzB,IACIC,EADUza,KAAK0a,aAAa,MACV7Q,QAAQ,QAAS,IACvC7J,KAAK2a,aAAa,KAAMF,MA4BtBG,EAAe,WAElB5a,KAAK6a,SAAW,GAChB7a,KAAK8a,WAAa,EAChB,IAAIC,EAAM,oCAAsCC,gBAAkB,0BAEhEC,EAAS,CACZC,MAAO,MACPC,QAAS,QAELnb,KAAKoa,mBACTa,EAAOG,QAAQ,CAAC,aACbL,GAAO,sBAEVE,EAAOG,QAAQ,CAAC,IAEjB,IAAIC,EAAKrb,KACP5C,EAAEke,IAAIP,GAAKQ,KAAK,SAASC,GAC1B,IAAIC,EAASD,EAAKE,MAElBL,EAAG/X,MAAQrE,KAAK,WACfe,KAAKsQ,IAAI,MACTtQ,KAAKoP,MAAM,SACXpP,KAAKoP,MAAM,eACPiM,EAAGjB,mBACPpa,KAAKoP,MAAM,aAEXpP,KAAKoP,MAAM,WACXpP,KAAKoP,MAAM,OACXqM,EAAOzX,QAAQ,SAAU2X,GAGT,IAAIC,KAAKD,EAAUE,YAAYC,UAC3B,IAAIF,KAAKP,EAAGP,YAAYgB,YAE1CT,EAAGP,WAAaa,EAAUE,YAE3B,IAAIE,EAAUJ,EAAUK,KAAKxZ,IAAI,SAAS9E,GACzC,OAAOA,EAAE8V,OAEuB,MAA9BmI,EAAUM,mBAA4BN,EAAUM,iBAAmB,IACtE,IAAIC,EAAWH,EAAQ/H,KAAK,MACxBkI,EAASxa,OAAS,IACrBwa,EAAW,aAEZ,IAAIC,EAAc,CACjB5R,GAAQ2I,OAAOyI,EAAUpR,IACzB6R,MAAUlJ,OAAOyI,EAAUS,OAC3BC,YAAcnJ,OAAOyI,EAAUW,gBAC/BC,QAAWrJ,OAAOyI,EAAUa,cAC5BC,IAAQP,GAEHb,EAAGjB,oBACR+B,EAAWO,UAAUxJ,OAAOyI,EAAUe,YAEvC1c,KAAKV,IAAI6c,GACT,IAvGsBQ,EACrB9D,EAsGG+D,EAAWvB,EAAGrB,QAAU2B,EAAUZ,IACtCM,EAAGR,SAASc,EAAUpR,IAAM,CAC3B6R,MAAOT,EAAUS,MACjBC,YAAaV,EAAUW,eACvBC,SA3GqBI,EA2GDR,EAAWI,QA1G/B1D,EAAI,IAAI+C,KAAKe,GAET9D,EAAEgE,UAAY,IADL,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACzFhE,EAAEiE,YAAc,IAAMjE,EAAEkE,eAyG3DC,KAAMJ,EACNZ,KAAMD,GAGHV,EAAGpB,mBACNzY,OAAOyb,OAAO5B,EAAGR,SAASc,EAAUpR,IAAK8Q,EAAGpB,kBAAkB0B,KAG7D3b,QAEJ,IACC,IAAIkd,EAAa7C,EAAcgB,EAAGrB,SAClCmD,aAAaC,QAAS,SAAWF,EAAa,aAAetO,KAAKC,UAAUwM,EAAG/X,QAC/E6Z,aAAaC,QAAS,SAAWF,EAAa,YAActO,KAAKC,UAAUwM,EAAGR,WAC9EsC,aAAaC,QAAS,SAAWF,EAAa,cAAgB7B,EAAGP,YAChE,MAAOuC,GACRnd,QAAQH,KAAK,6CAA+Csd,GAEzDhC,EAAGlB,cACNkB,EAAGlB,eAEJkB,EAAGiC,QAAS,KAIVjE,EAAgB,CAEnBiE,QAAW,EAEXhE,KAAS,SAAUiE,EAASrE,GAC3B,IAAIsE,EAAOxd,KAIX,GAHAwd,EAAKD,OAASA,EACd/b,OAAOyb,OAAOjd,KAAMkZ,GAEfA,EAAKM,WAAa,CAItBiE,OAAOC,WAHP,WACCF,EAAKG,WAEkB,QAExBJ,EAAOK,MAAM,WACZJ,EAAKG,YAIPJ,EAAOM,QAAQ,QAAQC,OAAO,SAAST,GACtCA,EAAEU,iBACFP,EAAKQ,KAAKT,EAAOrX,SAGdgT,EAAKO,UAKR8D,EAAOU,QAAQ,SAASC,GACvB,GAAoB,KAAhBA,EAAMC,MACT,OAAO,IAGTZ,EAAOa,MAAM,SAASF,GACrBV,EAAKQ,KAAKT,EAAOrX,WAOpByX,QAAY,WAEX,IAAI3d,KAAKsd,OAAQ,CAEZtd,KAAKka,gBACRla,KAAKka,iBAIN,IACC,IAAIgD,EAAa7C,EAAcra,KAAKga,SACpCha,KAAKsD,MAAQ6Z,aAAakB,QAAS,SAAWnB,EAAa,cAC3Dld,KAAK6a,SAAWsC,aAAakB,QAAS,SAAWnB,EAAa,aAC9Dld,KAAK8a,WAAaqC,aAAakB,QAAS,SAAWnB,EAAa,eAC5Dld,KAAK8a,YAAc9a,KAAKsD,OAAStD,KAAK6a,WACzC7a,KAAK8a,WAAa9a,KAAK8a,WACvB9a,KAAKsD,MAAQrE,KAAKwO,MAAM3J,KAAK8K,KAAKT,MAAMnO,KAAKsD,QAC7CtD,KAAK6a,SAAWjM,KAAKT,MAAMnO,KAAK6a,UAChC7a,KAAKsd,QAAS,GAEd,MAAOD,GACRnd,QAAQH,KAAK,mDAAqDsd,IAGpE,GAAIrd,KAAKsd,OAAQ,CAKYtd,KAAK8a,WAAWjR,QAAQ,OAAQ,IAAIA,QAAQ,IAAK,KAF7E,IAMQkR,EAAM,oCAAsCC,gBAAkB,2CAAwDhb,KAAK8a,WAAWjR,QAAQ,OAAQ,IAAIA,QAAQ,IAAK,KAAO,IAElLwR,EAAKrb,KACL5C,EAAEke,IAAIP,GAAKQ,KAAK,SAASC,GACxBA,EAAKE,MAAMha,OAAS,EACvBkZ,EAAajb,KAAK0b,IAEdA,EAAGlB,cACNkB,EAAGlB,eAEJkB,EAAGiC,QAAS,UAKd1C,EAAajb,KAAKK,OAKpBge,KAAW,SAASM,GACnBC,aAAajE,GACRgE,IACJA,EAAQ,IAETA,EAAQA,EAAM5b,cACd4X,EAAgBoD,WAAW,WAK1B,IAHA,IAAIc,EAAc,GAEdC,EAAaH,EAAMI,MAAM,OACpB7Z,EAAE,EAAE8Z,EAAKF,EAAW/c,OAAOmD,EAAE8Z,EAAK9Z,IAAK,CAE/C,IAAInH,EAAI+gB,EAAW5Z,GACdnH,GACL8gB,EAAYpb,KAAKpD,KAAKsD,MAAM2K,MAAM,SAAUtB,GAK3CA,EAAE5B,KAAKrN,EAAG,CACTgR,aAAa,EACbc,MAAO,MAGR7C,EAAE5B,KAAKrN,EAAG,CACTgR,aAAa,EACbc,MAAO,GACPyD,SAAUhU,KAAKmP,MAAM6E,SAASI,WAG/B1G,EAAE5B,KAAKrN,EAAG,CACTgR,aAAa,EACb1D,aAAc,EACdwE,MAAO,OAKV,GAAIgP,EAAY9c,OAAS,EAAG,CAQ3B,IAAIkd,EAAeJ,EAAY,GAC/BA,EAAcA,EAAYvd,MAAM,GAChC,IAAS4D,EAAE+Z,EAAald,OAAO,EAAEmD,GAAG,EAAEA,IAAK,CAC1C,IAAIyL,EAAMsO,EAAa/Z,GAAGyL,IAC1B,IAAKrL,EAAE,EAAE4Z,KAAKL,EAAY9c,OAAOuD,EAAE4Z,KAAK5Z,IAAK,CAE5C,IADA,IAAI6Z,EAAY,GACP3P,EAAE,EAAE4P,EAAKP,EAAYvZ,GAAGvD,OAAOyN,EAAE4P,EAAK5P,IAC9C2P,EAAUN,EAAYvZ,GAAGkK,GAAGmB,MAAO,EAEpC,IAAKwO,EAAUxO,GAAM,CACpBsO,EAAeA,EAAa3d,MAAM,EAAG4D,GAAGM,OAAOyZ,EAAa3d,MAAM4D,EAAE,IACpE,cAMH+Z,EAFiC,IAAvBJ,EAAY9c,OAEP8c,EAAY,GAGZ,GAGhB,IAAIzO,EAAY3S,EAAE4C,KAAK+P,SACnBwJ,EAAe,GACS,IAAxBqF,EAAald,QAChBqO,EAAQiP,QACJhf,KAAK4Z,mBAAqB5Z,KAAK6Z,iBAClC9J,EAAQkP,OAAOjf,KAAKkf,OAAOlf,KAAK2Z,cAAc,CAACwF,OAAS,MAE/Cnf,KAAK4Z,oBACX7J,EAAQrO,OAAS,EACpBqO,EAAQqP,WAAWC,GAAG,GAAGC,YAAYtf,KAAKkf,OAAOlf,KAAK2Z,cAAc,CAACwF,OAASP,EAAald,UAE3FqO,EAAQkP,OAAOjf,KAAKkf,OAAOlf,KAAK2Z,cAAc,CAACwF,OAASP,EAAald,WAIpE1B,KAAKyE,QACPzE,KAAKyE,SAIN,IAASI,EAAI,EAAGA,EAAI+Z,EAAald,OAAQmD,IAAK,CAC7C,IAAI0a,EAAWX,EAAa/Z,GAAGyL,IAC3BkP,EAAaxf,KAAK6a,SAAS0E,GAC3BC,GACHA,EAASlP,IAAMiP,EACfhG,EAAYnW,KAAKoc,IAEjBtf,QAAQH,KAAK,2CAIf,IAAI0f,EAAYriB,EAAE,mBACdsiB,EAAcD,EAChBjd,IAAI,WACJ,OAAOxC,KAAKuK,GAAGtJ,MAAM,KACnBqa,MACJ,GAA2B,IAAvBoE,EAAYhe,OAAc,CAC7B,IAASmD,EAAE,EAAE8Z,EAAKpF,EAAY7X,OAAOmD,EAAE8Z,EAAK9Z,IAC3CkL,EAAQkP,OAAOjf,KAAKkf,OAAOlf,KAAK0Z,gBAAgBH,EAAY1U,KAE7D0V,QACM,CAEN,IAAIoF,EAAU,GACd,IAAS9a,EAAE,EAAE8Z,EAAKC,EAAald,OAAOmD,EAAE8Z,EAAK9Z,IAC5C8a,EAAQvc,KAAKwb,EAAa/Z,GAAGyL,KAG9B,IACIoI,EADc,IAAIxB,YAAYwI,EAAaC,GACvBlH,YAtUL,SAASgH,EAAWG,EAASlH,GACnD,IAAK,IAAI7T,EAAE,EAAE8Z,EAAKjG,EAAMhX,OAAOmD,EAAE8Z,EAAK9Z,IAAK,CAC1C,IAAIgb,EAAOnH,EAAM7T,GACjB,GAAe,UAAXgb,EAAK,GACRJ,EAAUJ,GAAGQ,EAAK,GAAG,GAAGnb,aAClB,CACN,IAAI6a,EAAUK,EAAQC,EAAK,GAAG,GAAGvP,IAC7BkP,EAAWxf,KAAK6a,SAAS0E,GACzBO,EAAO9f,KAAKkf,OAAOlf,KAAK0Z,gBAAgB8F,GAC5C,GAAgB,eAAZK,EAAK,GACRJ,EAAUJ,GAAGQ,EAAK,GAAG,GAAGP,YAAYQ,QAC9B,GAAgB,WAAZD,EAAK,GAAiB,CAChC,IAAItb,EAEHA,EADe,IAAZsb,EAAK,GACF,KAECA,EAAK,GAAG,EAEhBJ,EAAUJ,GAAG9a,GAAKH,MAAM0b,KAI3BvF,MAkToB5a,KAAKK,KAAMyf,EAAWb,EAAclG,GAGnD1Y,KAAK8Z,YACP9Z,KAAK8Z,WAAWP,IAEhBwG,KAAK/f,MAAO,MAGfggB,MAAW,WACV5iB,EAAE4C,KAAK+P,SAASiP,QAChBhf,KAAKud,OAAOrX,IAAI,KAGjBgZ,OAAY,SAAUzc,EAAGoW,GACxB,OAAOpW,EAAEoH,QAAQ,gBAAiB,SAAUlD,EAAGC,GAC9C,IAAIqZ,EAAIpH,EAAEjS,GACV,MAAoB,iBAANqZ,GAA+B,iBAANA,EAAiBA,EAAItZ,MAr9GhE,CA09GIuZ","file":"ghosthunter.js","sourcesContent":["/**\n* ghostHunter - 0.6.0\n * Copyright (C) 2014 Jamal Neufeld (jamal@i11u.me)\n * MIT Licensed\n * @license\n*/\n(function( $ ) {\n\n\t/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.1.5\n * Copyright (C) 2017 Oliver Nightingale\n * @license MIT\n */\n\n;(function(){\n\n/**\n * A convenience function for configuring and constructing\n * a new lunr Index.\n *\n * A lunr.Builder instance is created and the pipeline setup\n * with a trimmer, stop word filter and stemmer.\n *\n * This builder object is yielded to the configuration function\n * that is passed as a parameter, allowing the list of fields\n * and other builder parameters to be customised.\n *\n * All documents _must_ be added within the passed config function.\n *\n * @example\n * var idx = lunr(function () {\n *   this.field('title')\n *   this.field('body')\n *   this.ref('id')\n *\n *   documents.forEach(function (doc) {\n *     this.add(doc)\n *   }, this)\n * })\n *\n * @see {@link lunr.Builder}\n * @see {@link lunr.Pipeline}\n * @see {@link lunr.trimmer}\n * @see {@link lunr.stopWordFilter}\n * @see {@link lunr.stemmer}\n * @namespace {function} lunr\n */\nvar lunr = function (config) {\n  var builder = new lunr.Builder\n\n  builder.pipeline.add(\n    lunr.trimmer,\n    lunr.stopWordFilter,\n    lunr.stemmer\n  )\n\n  builder.searchPipeline.add(\n    lunr.stemmer\n  )\n\n  config.call(builder, builder)\n  return builder.build()\n}\n\nlunr.version = \"2.1.5\"\n/*!\n * lunr.utils\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * A namespace containing utils for the rest of the lunr library\n */\nlunr.utils = {}\n\n/**\n * Print a warning message to the console.\n *\n * @param {String} message The message to be printed.\n * @memberOf Utils\n */\nlunr.utils.warn = (function (global) {\n  /* eslint-disable no-console */\n  return function (message) {\n    if (global.console && console.warn) {\n      console.warn(message)\n    }\n  }\n  /* eslint-enable no-console */\n})(this)\n\n/**\n * Convert an object to a string.\n *\n * In the case of `null` and `undefined` the function returns\n * the empty string, in all other cases the result of calling\n * `toString` on the passed object is returned.\n *\n * @param {Any} obj The object to convert to a string.\n * @return {String} string representation of the passed object.\n * @memberOf Utils\n */\nlunr.utils.asString = function (obj) {\n  if (obj === void 0 || obj === null) {\n    return \"\"\n  } else {\n    return obj.toString()\n  }\n}\nlunr.FieldRef = function (docRef, fieldName, stringValue) {\n  this.docRef = docRef\n  this.fieldName = fieldName\n  this._stringValue = stringValue\n}\n\nlunr.FieldRef.joiner = \"/\"\n\nlunr.FieldRef.fromString = function (s) {\n  var n = s.indexOf(lunr.FieldRef.joiner)\n\n  if (n === -1) {\n    throw \"malformed field ref string\"\n  }\n\n  var fieldRef = s.slice(0, n),\n      docRef = s.slice(n + 1)\n\n  return new lunr.FieldRef (docRef, fieldRef, s)\n}\n\nlunr.FieldRef.prototype.toString = function () {\n  if (this._stringValue == undefined) {\n    this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef\n  }\n\n  return this._stringValue\n}\n/**\n * A function to calculate the inverse document frequency for\n * a posting. This is shared between the builder and the index\n *\n * @private\n * @param {object} posting - The posting for a given term\n * @param {number} documentCount - The total number of documents.\n */\nlunr.idf = function (posting, documentCount) {\n  var documentsWithTerm = 0\n\n  for (var fieldName in posting) {\n    if (fieldName == '_index') continue // Ignore the term index, its not a field\n    documentsWithTerm += Object.keys(posting[fieldName]).length\n  }\n\n  var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5)\n\n  return Math.log(1 + Math.abs(x))\n}\n\n/**\n * A token wraps a string representation of a token\n * as it is passed through the text processing pipeline.\n *\n * @constructor\n * @param {string} [str=''] - The string token being wrapped.\n * @param {object} [metadata={}] - Metadata associated with this token.\n */\nlunr.Token = function (str, metadata) {\n  this.str = str || \"\"\n  this.metadata = metadata || {}\n}\n\n/**\n * Returns the token string that is being wrapped by this object.\n *\n * @returns {string}\n */\nlunr.Token.prototype.toString = function () {\n  return this.str\n}\n\n/**\n * A token update function is used when updating or optionally\n * when cloning a token.\n *\n * @callback lunr.Token~updateFunction\n * @param {string} str - The string representation of the token.\n * @param {Object} metadata - All metadata associated with this token.\n */\n\n/**\n * Applies the given function to the wrapped string token.\n *\n * @example\n * token.update(function (str, metadata) {\n *   return str.toUpperCase()\n * })\n *\n * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.update = function (fn) {\n  this.str = fn(this.str, this.metadata)\n  return this\n}\n\n/**\n * Creates a clone of this token. Optionally a function can be\n * applied to the cloned token.\n *\n * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.clone = function (fn) {\n  fn = fn || function (s) { return s }\n  return new lunr.Token (fn(this.str, this.metadata), this.metadata)\n}\n/*!\n * lunr.tokenizer\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * A function for splitting a string into tokens ready to be inserted into\n * the search index. Uses `lunr.tokenizer.separator` to split strings, change\n * the value of this property to change how strings are split into tokens.\n *\n * This tokenizer will convert its parameter to a string by calling `toString` and\n * then will split this string on the character in `lunr.tokenizer.separator`.\n * Arrays will have their elements converted to strings and wrapped in a lunr.Token.\n *\n * @static\n * @param {?(string|object|object[])} obj - The object to convert into tokens\n * @returns {lunr.Token[]}\n */\nlunr.tokenizer = function (obj) {\n  if (obj == null || obj == undefined) {\n    return []\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (t) {\n      return new lunr.Token(lunr.utils.asString(t).toLowerCase())\n    })\n  }\n\n  var str = obj.toString().trim().toLowerCase(),\n      len = str.length,\n      tokens = []\n\n  for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {\n    var char = str.charAt(sliceEnd),\n        sliceLength = sliceEnd - sliceStart\n\n    if ((char.match(lunr.tokenizer.separator) || sliceEnd == len)) {\n\n      if (sliceLength > 0) {\n        tokens.push(\n          new lunr.Token (str.slice(sliceStart, sliceEnd), {\n            position: [sliceStart, sliceLength],\n            index: tokens.length\n          })\n        )\n      }\n\n      sliceStart = sliceEnd + 1\n    }\n\n  }\n\n  return tokens\n}\n\n/**\n * The separator used to split a string into tokens. Override this property to change the behaviour of\n * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n *\n * @static\n * @see lunr.tokenizer\n */\nlunr.tokenizer.separator = /[\\s\\-]+/\n/*!\n * lunr.Pipeline\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * lunr.Pipelines maintain an ordered list of functions to be applied to all\n * tokens in documents entering the search index and queries being ran against\n * the index.\n *\n * An instance of lunr.Index created with the lunr shortcut will contain a\n * pipeline with a stop word filter and an English language stemmer. Extra\n * functions can be added before or after either of these functions or these\n * default functions can be removed.\n *\n * When run the pipeline will call each function in turn, passing a token, the\n * index of that token in the original list of all tokens and finally a list of\n * all the original tokens.\n *\n * The output of functions in the pipeline will be passed to the next function\n * in the pipeline. To exclude a token from entering the index the function\n * should return undefined, the rest of the pipeline will not be called with\n * this token.\n *\n * For serialisation of pipelines to work, all functions used in an instance of\n * a pipeline should be registered with lunr.Pipeline. Registered functions can\n * then be loaded. If trying to load a serialised pipeline that uses functions\n * that are not registered an error will be thrown.\n *\n * If not planning on serialising the pipeline then registering pipeline functions\n * is not necessary.\n *\n * @constructor\n */\nlunr.Pipeline = function () {\n  this._stack = []\n}\n\nlunr.Pipeline.registeredFunctions = Object.create(null)\n\n/**\n * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token\n * string as well as all known metadata. A pipeline function can mutate the token string\n * or mutate (or add) metadata for a given token.\n *\n * A pipeline function can indicate that the passed token should be discarded by returning\n * null. This token will not be passed to any downstream pipeline functions and will not be\n * added to the index.\n *\n * Multiple tokens can be returned by returning an array of tokens. Each token will be passed\n * to any downstream pipeline functions and all will returned tokens will be added to the index.\n *\n * Any number of pipeline functions may be chained together using a lunr.Pipeline.\n *\n * @interface lunr.PipelineFunction\n * @param {lunr.Token} token - A token from the document being processed.\n * @param {number} i - The index of this token in the complete list of tokens for this document/field.\n * @param {lunr.Token[]} tokens - All tokens for this document/field.\n * @returns {(?lunr.Token|lunr.Token[])}\n */\n\n/**\n * Register a function with the pipeline.\n *\n * Functions that are used in the pipeline should be registered if the pipeline\n * needs to be serialised, or a serialised pipeline needs to be loaded.\n *\n * Registering a function does not add it to a pipeline, functions must still be\n * added to instances of the pipeline for them to be used when running a pipeline.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @param {String} label - The label to register this function with\n */\nlunr.Pipeline.registerFunction = function (fn, label) {\n  if (label in this.registeredFunctions) {\n    lunr.utils.warn('Overwriting existing registered function: ' + label)\n  }\n\n  fn.label = label\n  lunr.Pipeline.registeredFunctions[fn.label] = fn\n}\n\n/**\n * Warns if the function is not registered as a Pipeline function.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @private\n */\nlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n  var isRegistered = fn.label && (fn.label in this.registeredFunctions)\n\n  if (!isRegistered) {\n    lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn)\n  }\n}\n\n/**\n * Loads a previously serialised pipeline.\n *\n * All functions to be loaded must already be registered with lunr.Pipeline.\n * If any function from the serialised data has not been registered then an\n * error will be thrown.\n *\n * @param {Object} serialised - The serialised pipeline to load.\n * @returns {lunr.Pipeline}\n */\nlunr.Pipeline.load = function (serialised) {\n  var pipeline = new lunr.Pipeline\n\n  serialised.forEach(function (fnName) {\n    var fn = lunr.Pipeline.registeredFunctions[fnName]\n\n    if (fn) {\n      pipeline.add(fn)\n    } else {\n      throw new Error('Cannot load unregistered function: ' + fnName)\n    }\n  })\n\n  return pipeline\n}\n\n/**\n * Adds new functions to the end of the pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.\n */\nlunr.Pipeline.prototype.add = function () {\n  var fns = Array.prototype.slice.call(arguments)\n\n  fns.forEach(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n    this._stack.push(fn)\n  }, this)\n}\n\n/**\n * Adds a single function after a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  pos = pos + 1\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Adds a single function before a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Removes a function from the pipeline.\n *\n * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.\n */\nlunr.Pipeline.prototype.remove = function (fn) {\n  var pos = this._stack.indexOf(fn)\n  if (pos == -1) {\n    return\n  }\n\n  this._stack.splice(pos, 1)\n}\n\n/**\n * Runs the current list of functions that make up the pipeline against the\n * passed tokens.\n *\n * @param {Array} tokens The tokens to run through the pipeline.\n * @returns {Array}\n */\nlunr.Pipeline.prototype.run = function (tokens) {\n  var stackLength = this._stack.length\n\n  for (var i = 0; i < stackLength; i++) {\n    var fn = this._stack[i]\n\n    tokens = tokens.reduce(function (memo, token, j) {\n      var result = fn(token, j, tokens)\n\n      if (result === void 0 || result === '') return memo\n\n      return memo.concat(result)\n    }, [])\n  }\n\n  return tokens\n}\n\n/**\n * Convenience method for passing a string through a pipeline and getting\n * strings out. This method takes care of wrapping the passed string in a\n * token and mapping the resulting tokens back to strings.\n *\n * @param {string} str - The string to pass through the pipeline.\n * @returns {string[]}\n */\nlunr.Pipeline.prototype.runString = function (str) {\n  var token = new lunr.Token (str)\n\n  return this.run([token]).map(function (t) {\n    return t.toString()\n  })\n}\n\n/**\n * Resets the pipeline by removing any existing processors.\n *\n */\nlunr.Pipeline.prototype.reset = function () {\n  this._stack = []\n}\n\n/**\n * Returns a representation of the pipeline ready for serialisation.\n *\n * Logs a warning if the function has not been registered.\n *\n * @returns {Array}\n */\nlunr.Pipeline.prototype.toJSON = function () {\n  return this._stack.map(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n\n    return fn.label\n  })\n}\n/*!\n * lunr.Vector\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * A vector is used to construct the vector space of documents and queries. These\n * vectors support operations to determine the similarity between two documents or\n * a document and a query.\n *\n * Normally no parameters are required for initializing a vector, but in the case of\n * loading a previously dumped vector the raw elements can be provided to the constructor.\n *\n * For performance reasons vectors are implemented with a flat array, where an elements\n * index is immediately followed by its value. E.g. [index, value, index, value]. This\n * allows the underlying array to be as sparse as possible and still offer decent\n * performance when being used for vector calculations.\n *\n * @constructor\n * @param {Number[]} [elements] - The flat list of element index and element value pairs.\n */\nlunr.Vector = function (elements) {\n  this._magnitude = 0\n  this.elements = elements || []\n}\n\n\n/**\n * Calculates the position within the vector to insert a given index.\n *\n * This is used internally by insert and upsert. If there are duplicate indexes then\n * the position is returned as if the value for that index were to be updated, but it\n * is the callers responsibility to check whether there is a duplicate at that index\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @returns {Number}\n */\nlunr.Vector.prototype.positionForIndex = function (index) {\n  // For an empty vector the tuple can be inserted at the beginning\n  if (this.elements.length == 0) {\n    return 0\n  }\n\n  var start = 0,\n      end = this.elements.length / 2,\n      sliceLength = end - start,\n      pivotPoint = Math.floor(sliceLength / 2),\n      pivotIndex = this.elements[pivotPoint * 2]\n\n  while (sliceLength > 1) {\n    if (pivotIndex < index) {\n      start = pivotPoint\n    }\n\n    if (pivotIndex > index) {\n      end = pivotPoint\n    }\n\n    if (pivotIndex == index) {\n      break\n    }\n\n    sliceLength = end - start\n    pivotPoint = start + Math.floor(sliceLength / 2)\n    pivotIndex = this.elements[pivotPoint * 2]\n  }\n\n  if (pivotIndex == index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex > index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex < index) {\n    return (pivotPoint + 1) * 2\n  }\n}\n\n/**\n * Inserts an element at an index within the vector.\n *\n * Does not allow duplicates, will throw an error if there is already an entry\n * for this index.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n */\nlunr.Vector.prototype.insert = function (insertIdx, val) {\n  this.upsert(insertIdx, val, function () {\n    throw \"duplicate index\"\n  })\n}\n\n/**\n * Inserts or updates an existing index within the vector.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n * @param {function} fn - A function that is called for updates, the existing value and the\n * requested value are passed as arguments\n */\nlunr.Vector.prototype.upsert = function (insertIdx, val, fn) {\n  this._magnitude = 0\n  var position = this.positionForIndex(insertIdx)\n\n  if (this.elements[position] == insertIdx) {\n    this.elements[position + 1] = fn(this.elements[position + 1], val)\n  } else {\n    this.elements.splice(position, 0, insertIdx, val)\n  }\n}\n\n/**\n * Calculates the magnitude of this vector.\n *\n * @returns {Number}\n */\nlunr.Vector.prototype.magnitude = function () {\n  if (this._magnitude) return this._magnitude\n\n  var sumOfSquares = 0,\n      elementsLength = this.elements.length\n\n  for (var i = 1; i < elementsLength; i += 2) {\n    var val = this.elements[i]\n    sumOfSquares += val * val\n  }\n\n  return this._magnitude = Math.sqrt(sumOfSquares)\n}\n\n/**\n * Calculates the dot product of this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The vector to compute the dot product with.\n * @returns {Number}\n */\nlunr.Vector.prototype.dot = function (otherVector) {\n  var dotProduct = 0,\n      a = this.elements, b = otherVector.elements,\n      aLen = a.length, bLen = b.length,\n      aVal = 0, bVal = 0,\n      i = 0, j = 0\n\n  while (i < aLen && j < bLen) {\n    aVal = a[i], bVal = b[j]\n    if (aVal < bVal) {\n      i += 2\n    } else if (aVal > bVal) {\n      j += 2\n    } else if (aVal == bVal) {\n      dotProduct += a[i + 1] * b[j + 1]\n      i += 2\n      j += 2\n    }\n  }\n\n  return dotProduct\n}\n\n/**\n * Calculates the cosine similarity between this vector and another\n * vector.\n *\n * @param {lunr.Vector} otherVector - The other vector to calculate the\n * similarity with.\n * @returns {Number}\n */\nlunr.Vector.prototype.similarity = function (otherVector) {\n  return this.dot(otherVector) / (this.magnitude() * otherVector.magnitude())\n}\n\n/**\n * Converts the vector to an array of the elements within the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toArray = function () {\n  var output = new Array (this.elements.length / 2)\n\n  for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {\n    output[j] = this.elements[i]\n  }\n\n  return output\n}\n\n/**\n * A JSON serializable representation of the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toJSON = function () {\n  return this.elements\n}\n/* eslint-disable */\n/*!\n * lunr.stemmer\n * Copyright (C) 2017 Oliver Nightingale\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * lunr.stemmer is an english language stemmer, this is a JavaScript\n * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token - The string to stem\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n */\nlunr.stemmer = (function(){\n  var step2list = {\n      \"ational\" : \"ate\",\n      \"tional\" : \"tion\",\n      \"enci\" : \"ence\",\n      \"anci\" : \"ance\",\n      \"izer\" : \"ize\",\n      \"bli\" : \"ble\",\n      \"alli\" : \"al\",\n      \"entli\" : \"ent\",\n      \"eli\" : \"e\",\n      \"ousli\" : \"ous\",\n      \"ization\" : \"ize\",\n      \"ation\" : \"ate\",\n      \"ator\" : \"ate\",\n      \"alism\" : \"al\",\n      \"iveness\" : \"ive\",\n      \"fulness\" : \"ful\",\n      \"ousness\" : \"ous\",\n      \"aliti\" : \"al\",\n      \"iviti\" : \"ive\",\n      \"biliti\" : \"ble\",\n      \"logi\" : \"log\"\n    },\n\n    step3list = {\n      \"icate\" : \"ic\",\n      \"ative\" : \"\",\n      \"alize\" : \"al\",\n      \"iciti\" : \"ic\",\n      \"ical\" : \"ic\",\n      \"ful\" : \"\",\n      \"ness\" : \"\"\n    },\n\n    c = \"[^aeiou]\",          // consonant\n    v = \"[aeiouy]\",          // vowel\n    C = c + \"[^aeiouy]*\",    // consonant sequence\n    V = v + \"[aeiou]*\",      // vowel sequence\n\n    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem\n\n  var re_mgr0 = new RegExp(mgr0);\n  var re_mgr1 = new RegExp(mgr1);\n  var re_meq1 = new RegExp(meq1);\n  var re_s_v = new RegExp(s_v);\n\n  var re_1a = /^(.+?)(ss|i)es$/;\n  var re2_1a = /^(.+?)([^s])s$/;\n  var re_1b = /^(.+?)eed$/;\n  var re2_1b = /^(.+?)(ed|ing)$/;\n  var re_1b_2 = /.$/;\n  var re2_1b_2 = /(at|bl|iz)$/;\n  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var re_1c = /^(.+?[^aeiou])y$/;\n  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n\n  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n\n  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n  var re2_4 = /^(.+?)(s|t)(ion)$/;\n\n  var re_5 = /^(.+?)e$/;\n  var re_5_1 = /ll$/;\n  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var porterStemmer = function porterStemmer(w) {\n    var stem,\n      suffix,\n      firstch,\n      re,\n      re2,\n      re3,\n      re4;\n\n    if (w.length < 3) { return w; }\n\n    firstch = w.substr(0,1);\n    if (firstch == \"y\") {\n      w = firstch.toUpperCase() + w.substr(1);\n    }\n\n    // Step 1a\n    re = re_1a\n    re2 = re2_1a;\n\n    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }\n    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }\n\n    // Step 1b\n    re = re_1b;\n    re2 = re2_1b;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      re = re_mgr0;\n      if (re.test(fp[1])) {\n        re = re_1b_2;\n        w = w.replace(re,\"\");\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1];\n      re2 = re_s_v;\n      if (re2.test(stem)) {\n        w = stem;\n        re2 = re2_1b_2;\n        re3 = re3_1b_2;\n        re4 = re4_1b_2;\n        if (re2.test(w)) { w = w + \"e\"; }\n        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }\n        else if (re4.test(w)) { w = w + \"e\"; }\n      }\n    }\n\n    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n    re = re_1c;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      w = stem + \"i\";\n    }\n\n    // Step 2\n    re = re_2;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step2list[suffix];\n      }\n    }\n\n    // Step 3\n    re = re_3;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step3list[suffix];\n      }\n    }\n\n    // Step 4\n    re = re_4;\n    re2 = re2_4;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      if (re.test(stem)) {\n        w = stem;\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1] + fp[2];\n      re2 = re_mgr1;\n      if (re2.test(stem)) {\n        w = stem;\n      }\n    }\n\n    // Step 5\n    re = re_5;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      re2 = re_meq1;\n      re3 = re3_5;\n      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {\n        w = stem;\n      }\n    }\n\n    re = re_5_1;\n    re2 = re_mgr1;\n    if (re.test(w) && re2.test(w)) {\n      re = re_1b_2;\n      w = w.replace(re,\"\");\n    }\n\n    // and turn initial Y back to y\n\n    if (firstch == \"y\") {\n      w = firstch.toLowerCase() + w.substr(1);\n    }\n\n    return w;\n  };\n\n  return function (token) {\n    return token.update(porterStemmer);\n  }\n})();\n\nlunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer')\n/*!\n * lunr.stopWordFilter\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * lunr.generateStopWordFilter builds a stopWordFilter function from the provided\n * list of stop words.\n *\n * The built in lunr.stopWordFilter is built using this generator and can be used\n * to generate custom stopWordFilters for applications or non English languages.\n *\n * @param {Array} token The token to pass through the filter\n * @returns {lunr.PipelineFunction}\n * @see lunr.Pipeline\n * @see lunr.stopWordFilter\n */\nlunr.generateStopWordFilter = function (stopWords) {\n  var words = stopWords.reduce(function (memo, stopWord) {\n    memo[stopWord] = stopWord\n    return memo\n  }, {})\n\n  return function (token) {\n    if (token && words[token.toString()] !== token.toString()) return token\n  }\n}\n\n/**\n * lunr.stopWordFilter is an English language stop word list filter, any words\n * contained in the list will not be passed through the filter.\n *\n * This is intended to be used in the Pipeline. If the token does not pass the\n * filter then undefined will be returned.\n *\n * @implements {lunr.PipelineFunction}\n * @params {lunr.Token} token - A token to check for being a stop word.\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n */\nlunr.stopWordFilter = lunr.generateStopWordFilter([\n  'a',\n  'able',\n  'about',\n  'across',\n  'after',\n  'all',\n  'almost',\n  'also',\n  'am',\n  'among',\n  'an',\n  'and',\n  'any',\n  'are',\n  'as',\n  'at',\n  'be',\n  'because',\n  'been',\n  'but',\n  'by',\n  'can',\n  'cannot',\n  'could',\n  'dear',\n  'did',\n  'do',\n  'does',\n  'either',\n  'else',\n  'ever',\n  'every',\n  'for',\n  'from',\n  'get',\n  'got',\n  'had',\n  'has',\n  'have',\n  'he',\n  'her',\n  'hers',\n  'him',\n  'his',\n  'how',\n  'however',\n  'i',\n  'if',\n  'in',\n  'into',\n  'is',\n  'it',\n  'its',\n  'just',\n  'least',\n  'let',\n  'like',\n  'likely',\n  'may',\n  'me',\n  'might',\n  'most',\n  'must',\n  'my',\n  'neither',\n  'no',\n  'nor',\n  'not',\n  'of',\n  'off',\n  'often',\n  'on',\n  'only',\n  'or',\n  'other',\n  'our',\n  'own',\n  'rather',\n  'said',\n  'say',\n  'says',\n  'she',\n  'should',\n  'since',\n  'so',\n  'some',\n  'than',\n  'that',\n  'the',\n  'their',\n  'them',\n  'then',\n  'there',\n  'these',\n  'they',\n  'this',\n  'tis',\n  'to',\n  'too',\n  'twas',\n  'us',\n  'wants',\n  'was',\n  'we',\n  'were',\n  'what',\n  'when',\n  'where',\n  'which',\n  'while',\n  'who',\n  'whom',\n  'why',\n  'will',\n  'with',\n  'would',\n  'yet',\n  'you',\n  'your'\n])\n\nlunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter')\n/*!\n * lunr.trimmer\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * lunr.trimmer is a pipeline function for trimming non word\n * characters from the beginning and end of tokens before they\n * enter the index.\n *\n * This implementation may not work correctly for non latin\n * characters and should either be removed or adapted for use\n * with languages with non-latin characters.\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token The token to pass through the filter\n * @returns {lunr.Token}\n * @see lunr.Pipeline\n */\nlunr.trimmer = function (token) {\n  return token.update(function (s) {\n    return s.replace(/^\\W+/, '').replace(/\\W+$/, '')\n  })\n}\n\nlunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer')\n/*!\n * lunr.TokenSet\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * A token set is used to store the unique list of all tokens\n * within an index. Token sets are also used to represent an\n * incoming query to the index, this query token set and index\n * token set are then intersected to find which tokens to look\n * up in the inverted index.\n *\n * A token set can hold multiple tokens, as in the case of the\n * index token set, or it can hold a single token as in the\n * case of a simple query token set.\n *\n * Additionally token sets are used to perform wildcard matching.\n * Leading, contained and trailing wildcards are supported, and\n * from this edit distance matching can also be provided.\n *\n * Token sets are implemented as a minimal finite state automata,\n * where both common prefixes and suffixes are shared between tokens.\n * This helps to reduce the space used for storing the token set.\n *\n * @constructor\n */\nlunr.TokenSet = function () {\n  this.final = false\n  this.edges = {}\n  this.id = lunr.TokenSet._nextId\n  lunr.TokenSet._nextId += 1\n}\n\n/**\n * Keeps track of the next, auto increment, identifier to assign\n * to a new tokenSet.\n *\n * TokenSets require a unique identifier to be correctly minimised.\n *\n * @private\n */\nlunr.TokenSet._nextId = 1\n\n/**\n * Creates a TokenSet instance from the given sorted array of words.\n *\n * @param {String[]} arr - A sorted array of strings to create the set from.\n * @returns {lunr.TokenSet}\n * @throws Will throw an error if the input array is not sorted.\n */\nlunr.TokenSet.fromArray = function (arr) {\n  var builder = new lunr.TokenSet.Builder\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    builder.insert(arr[i])\n  }\n\n  builder.finish()\n  return builder.root\n}\n\n/**\n * Creates a token set from a query clause.\n *\n * @private\n * @param {Object} clause - A single clause from lunr.Query.\n * @param {string} clause.term - The query clause term.\n * @param {number} [clause.editDistance] - The optional edit distance for the term.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromClause = function (clause) {\n  if ('editDistance' in clause) {\n    return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance)\n  } else {\n    return lunr.TokenSet.fromString(clause.term)\n  }\n}\n\n/**\n * Creates a token set representing a single string with a specified\n * edit distance.\n *\n * Insertions, deletions, substitutions and transpositions are each\n * treated as an edit distance of 1.\n *\n * Increasing the allowed edit distance will have a dramatic impact\n * on the performance of both creating and intersecting these TokenSets.\n * It is advised to keep the edit distance less than 3.\n *\n * @param {string} str - The string to create the token set from.\n * @param {number} editDistance - The allowed edit distance to match.\n * @returns {lunr.Vector}\n */\nlunr.TokenSet.fromFuzzyString = function (str, editDistance) {\n  var root = new lunr.TokenSet\n\n  var stack = [{\n    node: root,\n    editsRemaining: editDistance,\n    str: str\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop()\n\n    // no edit\n    if (frame.str.length > 0) {\n      var char = frame.str.charAt(0),\n          noEditNode\n\n      if (char in frame.node.edges) {\n        noEditNode = frame.node.edges[char]\n      } else {\n        noEditNode = new lunr.TokenSet\n        frame.node.edges[char] = noEditNode\n      }\n\n      if (frame.str.length == 1) {\n        noEditNode.final = true\n      } else {\n        stack.push({\n          node: noEditNode,\n          editsRemaining: frame.editsRemaining,\n          str: frame.str.slice(1)\n        })\n      }\n    }\n\n    // deletion\n    // can only do a deletion if we have enough edits remaining\n    // and if there are characters left to delete in the string\n    if (frame.editsRemaining > 0 && frame.str.length > 1) {\n      var char = frame.str.charAt(1),\n          deletionNode\n\n      if (char in frame.node.edges) {\n        deletionNode = frame.node.edges[char]\n      } else {\n        deletionNode = new lunr.TokenSet\n        frame.node.edges[char] = deletionNode\n      }\n\n      if (frame.str.length <= 2) {\n        deletionNode.final = true\n      } else {\n        stack.push({\n          node: deletionNode,\n          editsRemaining: frame.editsRemaining - 1,\n          str: frame.str.slice(2)\n        })\n      }\n    }\n\n    // deletion\n    // just removing the last character from the str\n    if (frame.editsRemaining > 0 && frame.str.length == 1) {\n      frame.node.final = true\n    }\n\n    // substitution\n    // can only do a substitution if we have enough edits remaining\n    // and if there are characters left to substitute\n    if (frame.editsRemaining > 0 && frame.str.length >= 1) {\n      if (\"*\" in frame.node.edges) {\n        var substitutionNode = frame.node.edges[\"*\"]\n      } else {\n        var substitutionNode = new lunr.TokenSet\n        frame.node.edges[\"*\"] = substitutionNode\n      }\n\n      if (frame.str.length == 1) {\n        substitutionNode.final = true\n      } else {\n        stack.push({\n          node: substitutionNode,\n          editsRemaining: frame.editsRemaining - 1,\n          str: frame.str.slice(1)\n        })\n      }\n    }\n\n    // insertion\n    // can only do insertion if there are edits remaining\n    if (frame.editsRemaining > 0) {\n      if (\"*\" in frame.node.edges) {\n        var insertionNode = frame.node.edges[\"*\"]\n      } else {\n        var insertionNode = new lunr.TokenSet\n        frame.node.edges[\"*\"] = insertionNode\n      }\n\n      if (frame.str.length == 0) {\n        insertionNode.final = true\n      } else {\n        stack.push({\n          node: insertionNode,\n          editsRemaining: frame.editsRemaining - 1,\n          str: frame.str\n        })\n      }\n    }\n\n    // transposition\n    // can only do a transposition if there are edits remaining\n    // and there are enough characters to transpose\n    if (frame.editsRemaining > 0 && frame.str.length > 1) {\n      var charA = frame.str.charAt(0),\n          charB = frame.str.charAt(1),\n          transposeNode\n\n      if (charB in frame.node.edges) {\n        transposeNode = frame.node.edges[charB]\n      } else {\n        transposeNode = new lunr.TokenSet\n        frame.node.edges[charB] = transposeNode\n      }\n\n      if (frame.str.length == 1) {\n        transposeNode.final = true\n      } else {\n        stack.push({\n          node: transposeNode,\n          editsRemaining: frame.editsRemaining - 1,\n          str: charA + frame.str.slice(2)\n        })\n      }\n    }\n  }\n\n  return root\n}\n\n/**\n * Creates a TokenSet from a string.\n *\n * The string may contain one or more wildcard characters (*)\n * that will allow wildcard matching when intersecting with\n * another TokenSet.\n *\n * @param {string} str - The string to create a TokenSet from.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromString = function (str) {\n  var node = new lunr.TokenSet,\n      root = node,\n      wildcardFound = false\n\n  /*\n   * Iterates through all characters within the passed string\n   * appending a node for each character.\n   *\n   * As soon as a wildcard character is found then a self\n   * referencing edge is introduced to continually match\n   * any number of any characters.\n   */\n  for (var i = 0, len = str.length; i < len; i++) {\n    var char = str[i],\n        final = (i == len - 1)\n\n    if (char == \"*\") {\n      wildcardFound = true\n      node.edges[char] = node\n      node.final = final\n\n    } else {\n      var next = new lunr.TokenSet\n      next.final = final\n\n      node.edges[char] = next\n      node = next\n\n      // TODO: is this needed anymore?\n      if (wildcardFound) {\n        node.edges[\"*\"] = root\n      }\n    }\n  }\n\n  return root\n}\n\n/**\n * Converts this TokenSet into an array of strings\n * contained within the TokenSet.\n *\n * @returns {string[]}\n */\nlunr.TokenSet.prototype.toArray = function () {\n  var words = []\n\n  var stack = [{\n    prefix: \"\",\n    node: this\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop(),\n        edges = Object.keys(frame.node.edges),\n        len = edges.length\n\n    if (frame.node.final) {\n      words.push(frame.prefix)\n    }\n\n    for (var i = 0; i < len; i++) {\n      var edge = edges[i]\n\n      stack.push({\n        prefix: frame.prefix.concat(edge),\n        node: frame.node.edges[edge]\n      })\n    }\n  }\n\n  return words\n}\n\n/**\n * Generates a string representation of a TokenSet.\n *\n * This is intended to allow TokenSets to be used as keys\n * in objects, largely to aid the construction and minimisation\n * of a TokenSet. As such it is not designed to be a human\n * friendly representation of the TokenSet.\n *\n * @returns {string}\n */\nlunr.TokenSet.prototype.toString = function () {\n  // NOTE: Using Object.keys here as this.edges is very likely\n  // to enter 'hash-mode' with many keys being added\n  //\n  // avoiding a for-in loop here as it leads to the function\n  // being de-optimised (at least in V8). From some simple\n  // benchmarks the performance is comparable, but allowing\n  // V8 to optimize may mean easy performance wins in the future.\n\n  if (this._str) {\n    return this._str\n  }\n\n  var str = this.final ? '1' : '0',\n      labels = Object.keys(this.edges).sort(),\n      len = labels.length\n\n  for (var i = 0; i < len; i++) {\n    var label = labels[i],\n        node = this.edges[label]\n\n    str = str + label + node.id\n  }\n\n  return str\n}\n\n/**\n * Returns a new TokenSet that is the intersection of\n * this TokenSet and the passed TokenSet.\n *\n * This intersection will take into account any wildcards\n * contained within the TokenSet.\n *\n * @param {lunr.TokenSet} b - An other TokenSet to intersect with.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.prototype.intersect = function (b) {\n  var output = new lunr.TokenSet,\n      frame = undefined\n\n  var stack = [{\n    qNode: b,\n    output: output,\n    node: this\n  }]\n\n  while (stack.length) {\n    frame = stack.pop()\n\n    // NOTE: As with the #toString method, we are using\n    // Object.keys and a for loop instead of a for-in loop\n    // as both of these objects enter 'hash' mode, causing\n    // the function to be de-optimised in V8\n    var qEdges = Object.keys(frame.qNode.edges),\n        qLen = qEdges.length,\n        nEdges = Object.keys(frame.node.edges),\n        nLen = nEdges.length\n\n    for (var q = 0; q < qLen; q++) {\n      var qEdge = qEdges[q]\n\n      for (var n = 0; n < nLen; n++) {\n        var nEdge = nEdges[n]\n\n        if (nEdge == qEdge || qEdge == '*') {\n          var node = frame.node.edges[nEdge],\n              qNode = frame.qNode.edges[qEdge],\n              final = node.final && qNode.final,\n              next = undefined\n\n          if (nEdge in frame.output.edges) {\n            // an edge already exists for this character\n            // no need to create a new node, just set the finality\n            // bit unless this node is already final\n            next = frame.output.edges[nEdge]\n            next.final = next.final || final\n\n          } else {\n            // no edge exists yet, must create one\n            // set the finality bit and insert it\n            // into the output\n            next = new lunr.TokenSet\n            next.final = final\n            frame.output.edges[nEdge] = next\n          }\n\n          stack.push({\n            qNode: qNode,\n            output: next,\n            node: node\n          })\n        }\n      }\n    }\n  }\n\n  return output\n}\nlunr.TokenSet.Builder = function () {\n  this.previousWord = \"\"\n  this.root = new lunr.TokenSet\n  this.uncheckedNodes = []\n  this.minimizedNodes = {}\n}\n\nlunr.TokenSet.Builder.prototype.insert = function (word) {\n  var node,\n      commonPrefix = 0\n\n  if (word < this.previousWord) {\n    throw new Error (\"Out of order word insertion\")\n  }\n\n  for (var i = 0; i < word.length && i < this.previousWord.length; i++) {\n    if (word[i] != this.previousWord[i]) break\n    commonPrefix++\n  }\n\n  this.minimize(commonPrefix)\n\n  if (this.uncheckedNodes.length == 0) {\n    node = this.root\n  } else {\n    node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child\n  }\n\n  for (var i = commonPrefix; i < word.length; i++) {\n    var nextNode = new lunr.TokenSet,\n        char = word[i]\n\n    node.edges[char] = nextNode\n\n    this.uncheckedNodes.push({\n      parent: node,\n      char: char,\n      child: nextNode\n    })\n\n    node = nextNode\n  }\n\n  node.final = true\n  this.previousWord = word\n}\n\nlunr.TokenSet.Builder.prototype.finish = function () {\n  this.minimize(0)\n}\n\nlunr.TokenSet.Builder.prototype.minimize = function (downTo) {\n  for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {\n    var node = this.uncheckedNodes[i],\n        childKey = node.child.toString()\n\n    if (childKey in this.minimizedNodes) {\n      node.parent.edges[node.char] = this.minimizedNodes[childKey]\n    } else {\n      // Cache the key for this node since\n      // we know it can't change anymore\n      node.child._str = childKey\n\n      this.minimizedNodes[childKey] = node.child\n    }\n\n    this.uncheckedNodes.pop()\n  }\n}\n/*!\n * lunr.Index\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * An index contains the built index of all documents and provides a query interface\n * to the index.\n *\n * Usually instances of lunr.Index will not be created using this constructor, instead\n * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be\n * used to load previously built and serialized indexes.\n *\n * @constructor\n * @param {Object} attrs - The attributes of the built search index.\n * @param {Object} attrs.invertedIndex - An index of term/field to document reference.\n * @param {Object<string, lunr.Vector>} attrs.documentVectors - Document vectors keyed by document reference.\n * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.\n * @param {string[]} attrs.fields - The names of indexed document fields.\n * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.\n */\nlunr.Index = function (attrs) {\n  this.invertedIndex = attrs.invertedIndex\n  this.fieldVectors = attrs.fieldVectors\n  this.tokenSet = attrs.tokenSet\n  this.fields = attrs.fields\n  this.pipeline = attrs.pipeline\n}\n\n/**\n * A result contains details of a document matching a search query.\n * @typedef {Object} lunr.Index~Result\n * @property {string} ref - The reference of the document this result represents.\n * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.\n * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.\n */\n\n/**\n * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple\n * query language which itself is parsed into an instance of lunr.Query.\n *\n * For programmatically building queries it is advised to directly use lunr.Query, the query language\n * is best used for human entered text rather than program generated text.\n *\n * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported\n * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'\n * or 'world', though those that contain both will rank higher in the results.\n *\n * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can\n * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding\n * wildcards will increase the number of documents that will be found but can also have a negative\n * impact on query performance, especially with wildcards at the beginning of a term.\n *\n * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term\n * hello in the title field will match this query. Using a field not present in the index will lead\n * to an error being thrown.\n *\n * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term\n * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported\n * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.\n * Avoid large values for edit distance to improve query performance.\n *\n * To escape special characters the backslash character '\\' can be used, this allows searches to include\n * characters that would normally be considered modifiers, e.g. `foo\\~2` will search for a term \"foo~2\" instead\n * of attempting to apply a boost of 2 to the search term \"foo\".\n *\n * @typedef {string} lunr.Index~QueryString\n * @example <caption>Simple single term query</caption>\n * hello\n * @example <caption>Multiple term query</caption>\n * hello world\n * @example <caption>term scoped to a field</caption>\n * title:hello\n * @example <caption>term with a boost of 10</caption>\n * hello^10\n * @example <caption>term with an edit distance of 2</caption>\n * hello~2\n */\n\n/**\n * Performs a search against the index using lunr query syntax.\n *\n * Results will be returned sorted by their score, the most relevant results\n * will be returned first.\n *\n * For more programmatic querying use lunr.Index#query.\n *\n * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.\n * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.search = function (queryString) {\n  return this.query(function (query) {\n    var parser = new lunr.QueryParser(queryString, query)\n    parser.parse()\n  })\n}\n\n/**\n * A query builder callback provides a query object to be used to express\n * the query to perform on the index.\n *\n * @callback lunr.Index~queryBuilder\n * @param {lunr.Query} query - The query object to build up.\n * @this lunr.Query\n */\n\n/**\n * Performs a query against the index using the yielded lunr.Query object.\n *\n * If performing programmatic queries against the index, this method is preferred\n * over lunr.Index#search so as to avoid the additional query parsing overhead.\n *\n * A query object is yielded to the supplied function which should be used to\n * express the query to be run against the index.\n *\n * Note that although this function takes a callback parameter it is _not_ an\n * asynchronous operation, the callback is just yielded a query object to be\n * customized.\n *\n * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.query = function (fn) {\n  // for each query clause\n  // * process terms\n  // * expand terms from token set\n  // * find matching documents and metadata\n  // * get document vectors\n  // * score documents\n\n  var query = new lunr.Query(this.fields),\n      matchingFields = Object.create(null),\n      queryVectors = Object.create(null),\n      termFieldCache = Object.create(null)\n\n  fn.call(query, query)\n\n  for (var i = 0; i < query.clauses.length; i++) {\n    /*\n     * Unless the pipeline has been disabled for this term, which is\n     * the case for terms with wildcards, we need to pass the clause\n     * term through the search pipeline. A pipeline returns an array\n     * of processed terms. Pipeline functions may expand the passed\n     * term, which means we may end up performing multiple index lookups\n     * for a single query term.\n     */\n    var clause = query.clauses[i],\n        terms = null\n\n    if (clause.usePipeline) {\n      terms = this.pipeline.runString(clause.term)\n    } else {\n      terms = [clause.term]\n    }\n\n    for (var m = 0; m < terms.length; m++) {\n      var term = terms[m]\n\n      /*\n       * Each term returned from the pipeline needs to use the same query\n       * clause object, e.g. the same boost and or edit distance. The\n       * simplest way to do this is to re-use the clause object but mutate\n       * its term property.\n       */\n\n      clause = JSON.parse(JSON.stringify(clause))\n      clause.term = term\n\n      /*\n       * From the term in the clause we create a token set which will then\n       * be used to intersect the indexes token set to get a list of terms\n       * to lookup in the inverted index\n       */\n      var termTokenSet = lunr.TokenSet.fromClause(clause),\n          expandedTerms = this.tokenSet.intersect(termTokenSet).toArray()\n\n      for (var j = 0; j < expandedTerms.length; j++) {\n        /*\n         * For each term get the posting and termIndex, this is required for\n         * building the query vector.\n         */\n          var expandedTerm = expandedTerms[j];\n          var posting = this.invertedIndex[expandedTerm];\n          if (posting) {\n              var termIndex = posting._index;\n          } else {\n              continue;\n          }\n        for (var k = 0; k < clause.fields.length; k++) {\n          /*\n           * For each field that this query term is scoped by (by default\n           * all fields are in scope) we need to get all the document refs\n           * that have this term in that field.\n           *\n           * The posting is the entry in the invertedIndex for the matching\n           * term from above.\n           */\n          var field = clause.fields[k],\n              fieldPosting = posting[field],\n              matchingDocumentRefs = Object.keys(fieldPosting),\n              termField = expandedTerm + \"/\" + field\n\n          /*\n           * To support field level boosts a query vector is created per\n           * field. This vector is populated using the termIndex found for\n           * the term and a unit value with the appropriate boost applied.\n           *\n           * If the query vector for this field does not exist yet it needs\n           * to be created.\n           */\n          if (queryVectors[field] === undefined) {\n            queryVectors[field] = new lunr.Vector\n          }\n\n          /*\n           * Using upsert because there could already be an entry in the vector\n           * for the term we are working with. In that case we just add the scores\n           * together.\n           */\n          queryVectors[field].upsert(termIndex, 1 * clause.boost, function (a, b) { return a + b })\n\n          /**\n           * If we've already seen this term, field combo then we've already collected\n           * the matching documents and metadata, no need to go through all that again\n           */\n          if (termFieldCache[termField]) {\n            continue\n          }\n\n          for (var l = 0; l < matchingDocumentRefs.length; l++) {\n            /*\n             * All metadata for this term/field/document triple\n             * are then extracted and collected into an instance\n             * of lunr.MatchData ready to be returned in the query\n             * results\n             */\n            var matchingDocumentRef = matchingDocumentRefs[l],\n                matchingFieldRef = new lunr.FieldRef (matchingDocumentRef, field),\n                metadata = fieldPosting[matchingDocumentRef],\n                fieldMatch\n\n            if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {\n              matchingFields[matchingFieldRef] = new lunr.MatchData (expandedTerm, field, metadata)\n            } else {\n              fieldMatch.add(expandedTerm, field, metadata)\n            }\n\n          }\n\n          termFieldCache[termField] = true\n        }\n      }\n    }\n  }\n\n  var matchingFieldRefs = Object.keys(matchingFields),\n      results = [],\n      matches = Object.create(null)\n\n  for (var i = 0; i < matchingFieldRefs.length; i++) {\n    /*\n     * Currently we have document fields that match the query, but we\n     * need to return documents. The matchData and scores are combined\n     * from multiple fields belonging to the same document.\n     *\n     * Scores are calculated by field, using the query vectors created\n     * above, and combined into a final document score using addition.\n     */\n    var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),\n        docRef = fieldRef.docRef,\n        fieldVector = this.fieldVectors[fieldRef],\n        score = queryVectors[fieldRef.fieldName].similarity(fieldVector),\n        docMatch\n\n    if ((docMatch = matches[docRef]) !== undefined) {\n      docMatch.score += score\n      docMatch.matchData.combine(matchingFields[fieldRef])\n    } else {\n      var match = {\n        ref: docRef,\n        score: score,\n        matchData: matchingFields[fieldRef]\n      }\n      matches[docRef] = match\n      results.push(match)\n    }\n  }\n\n  /*\n   * Sort the results objects by score, highest first.\n   */\n  return results.sort(function (a, b) {\n    return b.score - a.score\n  })\n}\n\n/**\n * Prepares the index for JSON serialization.\n *\n * The schema for this JSON blob will be described in a\n * separate JSON schema file.\n *\n * @returns {Object}\n */\nlunr.Index.prototype.toJSON = function () {\n  var invertedIndex = Object.keys(this.invertedIndex)\n    .sort()\n    .map(function (term) {\n      return [term, this.invertedIndex[term]]\n    }, this)\n\n  var fieldVectors = Object.keys(this.fieldVectors)\n    .map(function (ref) {\n      return [ref, this.fieldVectors[ref].toJSON()]\n    }, this)\n\n  return {\n    version: lunr.version,\n    fields: this.fields,\n    fieldVectors: fieldVectors,\n    invertedIndex: invertedIndex,\n    pipeline: this.pipeline.toJSON()\n  }\n}\n\n/**\n * Loads a previously serialized lunr.Index\n *\n * @param {Object} serializedIndex - A previously serialized lunr.Index\n * @returns {lunr.Index}\n */\nlunr.Index.load = function (serializedIndex) {\n  var attrs = {},\n      fieldVectors = {},\n      serializedVectors = serializedIndex.fieldVectors,\n      invertedIndex = {},\n      serializedInvertedIndex = serializedIndex.invertedIndex,\n      tokenSetBuilder = new lunr.TokenSet.Builder,\n      pipeline = lunr.Pipeline.load(serializedIndex.pipeline)\n\n  if (serializedIndex.version != lunr.version) {\n    lunr.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\" + lunr.version + \"' does not match serialized index '\" + serializedIndex.version + \"'\")\n  }\n\n  for (var i = 0; i < serializedVectors.length; i++) {\n    var tuple = serializedVectors[i],\n        ref = tuple[0],\n        elements = tuple[1]\n\n    fieldVectors[ref] = new lunr.Vector(elements)\n  }\n\n  for (var i = 0; i < serializedInvertedIndex.length; i++) {\n    var tuple = serializedInvertedIndex[i],\n        term = tuple[0],\n        posting = tuple[1]\n\n    tokenSetBuilder.insert(term)\n    invertedIndex[term] = posting\n  }\n\n  tokenSetBuilder.finish()\n\n  attrs.fields = serializedIndex.fields\n\n  attrs.fieldVectors = fieldVectors\n  attrs.invertedIndex = invertedIndex\n  attrs.tokenSet = tokenSetBuilder.root\n  attrs.pipeline = pipeline\n\n  return new lunr.Index(attrs)\n}\n/*!\n * lunr.Builder\n * Copyright (C) 2017 Oliver Nightingale\n */\n\n/**\n * lunr.Builder performs indexing on a set of documents and\n * returns instances of lunr.Index ready for querying.\n *\n * All configuration of the index is done via the builder, the\n * fields to index, the document reference, the text processing\n * pipeline and document scoring parameters are all set on the\n * builder before indexing.\n *\n * @constructor\n * @property {string} _ref - Internal reference to the document reference field.\n * @property {string[]} _fields - Internal reference to the document fields to index.\n * @property {object} invertedIndex - The inverted index maps terms to document fields.\n * @property {object} documentTermFrequencies - Keeps track of document term frequencies.\n * @property {object} documentLengths - Keeps track of the length of documents added to the index.\n * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.\n * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.\n * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.\n * @property {number} documentCount - Keeps track of the total number of documents indexed.\n * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.\n * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.\n * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.\n * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.\n */\nlunr.Builder = function () {\n  this._ref = \"id\"\n  this._fields = []\n  this.invertedIndex = Object.create(null)\n  this.fieldTermFrequencies = {}\n  this.fieldLengths = {}\n  this.tokenizer = lunr.tokenizer\n  this.pipeline = new lunr.Pipeline\n  this.searchPipeline = new lunr.Pipeline\n  this.documentCount = 0\n  this._b = 0.75\n  this._k1 = 1.2\n  this.termIndex = 0\n  this.metadataWhitelist = []\n}\n\n/**\n * Sets the document field used as the document reference. Every document must have this field.\n * The type of this field in the document should be a string, if it is not a string it will be\n * coerced into a string by calling toString.\n *\n * The default ref is 'id'.\n *\n * The ref should _not_ be changed during indexing, it should be set before any documents are\n * added to the index. Changing it during indexing can lead to inconsistent results.\n *\n * @param {string} ref - The name of the reference field in the document.\n */\nlunr.Builder.prototype.ref = function (ref) {\n  this._ref = ref\n}\n\n/**\n * Adds a field to the list of document fields that will be indexed. Every document being\n * indexed should have this field. Null values for this field in indexed documents will\n * not cause errors but will limit the chance of that document being retrieved by searches.\n *\n * All fields should be added before adding documents to the index. Adding fields after\n * a document has been indexed will have no effect on already indexed documents.\n *\n * @param {string} field - The name of a field to index in all documents.\n */\nlunr.Builder.prototype.field = function (field) {\n  this._fields.push(field)\n}\n\n/**\n * A parameter to tune the amount of field length normalisation that is applied when\n * calculating relevance scores. A value of 0 will completely disable any normalisation\n * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b\n * will be clamped to the range 0 - 1.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.b = function (number) {\n  if (number < 0) {\n    this._b = 0\n  } else if (number > 1) {\n    this._b = 1\n  } else {\n    this._b = number\n  }\n}\n\n/**\n * A parameter that controls the speed at which a rise in term frequency results in term\n * frequency saturation. The default value is 1.2. Setting this to a higher value will give\n * slower saturation levels, a lower value will result in quicker saturation.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.k1 = function (number) {\n  this._k1 = number\n}\n\n/**\n * Adds a document to the index.\n *\n * Before adding fields to the index the index should have been fully setup, with the document\n * ref and all fields to index already having been specified.\n *\n * The document must have a field name as specified by the ref (by default this is 'id') and\n * it should have all fields defined for indexing, though null or undefined values will not\n * cause errors.\n *\n * @param {object} doc - The document to add to the index.\n */\nlunr.Builder.prototype.add = function (doc) {\n  var docRef = doc[this._ref]\n\n  this.documentCount += 1\n\n  for (var i = 0; i < this._fields.length; i++) {\n    var fieldName = this._fields[i],\n        field = doc[fieldName],\n        tokens = this.tokenizer(field),\n        terms = this.pipeline.run(tokens),\n        fieldRef = new lunr.FieldRef (docRef, fieldName),\n        fieldTerms = Object.create(null)\n\n    this.fieldTermFrequencies[fieldRef] = fieldTerms\n    this.fieldLengths[fieldRef] = 0\n\n    // store the length of this field for this document\n    this.fieldLengths[fieldRef] += terms.length\n\n    // calculate term frequencies for this field\n    for (var j = 0; j < terms.length; j++) {\n      var term = terms[j]\n\n      if (fieldTerms[term] == undefined) {\n        fieldTerms[term] = 0\n      }\n\n      fieldTerms[term] += 1\n\n      // add to inverted index\n      // create an initial posting if one doesn't exist\n      if (this.invertedIndex[term] == undefined) {\n        var posting = Object.create(null)\n        posting[\"_index\"] = this.termIndex\n        this.termIndex += 1\n\n        for (var k = 0; k < this._fields.length; k++) {\n          posting[this._fields[k]] = Object.create(null)\n        }\n\n        this.invertedIndex[term] = posting\n      }\n\n      // add an entry for this term/fieldName/docRef to the invertedIndex\n      if (this.invertedIndex[term][fieldName][docRef] == undefined) {\n        this.invertedIndex[term][fieldName][docRef] = Object.create(null)\n      }\n\n      // store all whitelisted metadata about this token in the\n      // inverted index\n      for (var l = 0; l < this.metadataWhitelist.length; l++) {\n        var metadataKey = this.metadataWhitelist[l],\n            metadata = term.metadata[metadataKey]\n\n        if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {\n          this.invertedIndex[term][fieldName][docRef][metadataKey] = []\n        }\n\n        this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata)\n      }\n    }\n\n  }\n}\n\n/**\n * Calculates the average document length for this index\n *\n * @private\n */\nlunr.Builder.prototype.calculateAverageFieldLengths = function () {\n\n  var fieldRefs = Object.keys(this.fieldLengths),\n      numberOfFields = fieldRefs.length,\n      accumulator = {},\n      documentsWithField = {}\n\n  for (var i = 0; i < numberOfFields; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        field = fieldRef.fieldName\n\n    documentsWithField[field] || (documentsWithField[field] = 0)\n    documentsWithField[field] += 1\n\n    accumulator[field] || (accumulator[field] = 0)\n    accumulator[field] += this.fieldLengths[fieldRef]\n  }\n\n  for (var i = 0; i < this._fields.length; i++) {\n    var field = this._fields[i]\n    accumulator[field] = accumulator[field] / documentsWithField[field]\n  }\n\n  this.averageFieldLength = accumulator\n}\n\n/**\n * Builds a vector space model of every document using lunr.Vector\n *\n * @private\n */\nlunr.Builder.prototype.createFieldVectors = function () {\n  var fieldVectors = {},\n      fieldRefs = Object.keys(this.fieldTermFrequencies),\n      fieldRefsLength = fieldRefs.length,\n      termIdfCache = Object.create(null)\n\n  for (var i = 0; i < fieldRefsLength; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        field = fieldRef.fieldName,\n        fieldLength = this.fieldLengths[fieldRef],\n        fieldVector = new lunr.Vector,\n        termFrequencies = this.fieldTermFrequencies[fieldRef],\n        terms = Object.keys(termFrequencies),\n        termsLength = terms.length\n\n    for (var j = 0; j < termsLength; j++) {\n      var term = terms[j],\n          tf = termFrequencies[term],\n          termIndex = this.invertedIndex[term]._index,\n          idf, score, scoreWithPrecision\n\n      if (termIdfCache[term] === undefined) {\n        idf = lunr.idf(this.invertedIndex[term], this.documentCount)\n        termIdfCache[term] = idf\n      } else {\n        idf = termIdfCache[term]\n      }\n\n      score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[field])) + tf)\n      scoreWithPrecision = Math.round(score * 1000) / 1000\n      // Converts 1.23456789 to 1.234.\n      // Reducing the precision so that the vectors take up less\n      // space when serialised. Doing it now so that they behave\n      // the same before and after serialisation. Also, this is\n      // the fastest approach to reducing a number's precision in\n      // JavaScript.\n\n      fieldVector.insert(termIndex, scoreWithPrecision)\n    }\n\n    fieldVectors[fieldRef] = fieldVector\n  }\n\n  this.fieldVectors = fieldVectors\n}\n\n/**\n * Creates a token set of all tokens in the index using lunr.TokenSet\n *\n * @private\n */\nlunr.Builder.prototype.createTokenSet = function () {\n  this.tokenSet = lunr.TokenSet.fromArray(\n    Object.keys(this.invertedIndex).sort()\n  )\n}\n\n/**\n * Builds the index, creating an instance of lunr.Index.\n *\n * This completes the indexing process and should only be called\n * once all documents have been added to the index.\n *\n * @returns {lunr.Index}\n */\nlunr.Builder.prototype.build = function () {\n  this.calculateAverageFieldLengths()\n  this.createFieldVectors()\n  this.createTokenSet()\n\n  return new lunr.Index({\n    invertedIndex: this.invertedIndex,\n    fieldVectors: this.fieldVectors,\n    tokenSet: this.tokenSet,\n    fields: this._fields,\n    pipeline: this.searchPipeline\n  })\n}\n\n/**\n * Applies a plugin to the index builder.\n *\n * A plugin is a function that is called with the index builder as its context.\n * Plugins can be used to customise or extend the behaviour of the index\n * in some way. A plugin is just a function, that encapsulated the custom\n * behaviour that should be applied when building the index.\n *\n * The plugin function will be called with the index builder as its argument, additional\n * arguments can also be passed when calling use. The function will be called\n * with the index builder as its context.\n *\n * @param {Function} plugin The plugin to apply.\n */\nlunr.Builder.prototype.use = function (fn) {\n  var args = Array.prototype.slice.call(arguments, 1)\n  args.unshift(this)\n  fn.apply(this, args)\n}\n/**\n * Contains and collects metadata about a matching document.\n * A single instance of lunr.MatchData is returned as part of every\n * lunr.Index~Result.\n *\n * @constructor\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n * @property {object} metadata - A cloned collection of metadata associated with this document.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData = function (term, field, metadata) {\n  var clonedMetadata = Object.create(null),\n      metadataKeys = Object.keys(metadata)\n\n  // Cloning the metadata to prevent the original\n  // being mutated during match data combination.\n  // Metadata is kept in an array within the inverted\n  // index so cloning the data can be done with\n  // Array#slice\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n    clonedMetadata[key] = metadata[key].slice()\n  }\n\n  this.metadata = Object.create(null)\n  this.metadata[term] = Object.create(null)\n  this.metadata[term][field] = clonedMetadata\n}\n\n/**\n * An instance of lunr.MatchData will be created for every term that matches a\n * document. However only one instance is required in a lunr.Index~Result. This\n * method combines metadata from another instance of lunr.MatchData with this\n * objects metadata.\n *\n * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData.prototype.combine = function (otherMatchData) {\n  var terms = Object.keys(otherMatchData.metadata)\n\n  for (var i = 0; i < terms.length; i++) {\n    var term = terms[i],\n        fields = Object.keys(otherMatchData.metadata[term])\n\n    if (this.metadata[term] == undefined) {\n      this.metadata[term] = Object.create(null)\n    }\n\n    for (var j = 0; j < fields.length; j++) {\n      var field = fields[j],\n          keys = Object.keys(otherMatchData.metadata[term][field])\n\n      if (this.metadata[term][field] == undefined) {\n        this.metadata[term][field] = Object.create(null)\n      }\n\n      for (var k = 0; k < keys.length; k++) {\n        var key = keys[k]\n\n        if (this.metadata[term][field][key] == undefined) {\n          this.metadata[term][field][key] = otherMatchData.metadata[term][field][key]\n        } else {\n          this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key])\n        }\n\n      }\n    }\n  }\n}\n\n/**\n * Add metadata for a term/field pair to this instance of match data.\n *\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n */\nlunr.MatchData.prototype.add = function (term, field, metadata) {\n  if (!(term in this.metadata)) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  if (!(field in this.metadata[term])) {\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  var metadataKeys = Object.keys(metadata)\n\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n\n    if (key in this.metadata[term][field]) {\n      this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key])\n    } else {\n      this.metadata[term][field][key] = metadata[key]\n    }\n  }\n}\n/**\n * A lunr.Query provides a programmatic way of defining queries to be performed\n * against a {@link lunr.Index}.\n *\n * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method\n * so the query object is pre-initialized with the right index fields.\n *\n * @constructor\n * @property {lunr.Query~Clause[]} clauses - An array of query clauses.\n * @property {string[]} allFields - An array of all available fields in a lunr.Index.\n */\nlunr.Query = function (allFields) {\n  this.clauses = []\n  this.allFields = allFields\n}\n\n/**\n * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.\n *\n * This allows wildcards to be added to the beginning and end of a term without having to manually do any string\n * concatenation.\n *\n * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.\n *\n * @constant\n * @default\n * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour\n * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists\n * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with trailing wildcard</caption>\n * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })\n * @example <caption>query term with leading and trailing wildcard</caption>\n * query.term('foo', {\n *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING\n * })\n */\nlunr.Query.wildcard = new String (\"*\")\nlunr.Query.wildcard.NONE = 0\nlunr.Query.wildcard.LEADING = 1\nlunr.Query.wildcard.TRAILING = 2\n\n/**\n * A single clause in a {@link lunr.Query} contains a term and details on how to\n * match that term against a {@link lunr.Index}.\n *\n * @typedef {Object} lunr.Query~Clause\n * @property {string[]} fields - The fields in an index this clause should be matched against.\n * @property {number} [boost=1] - Any boost that should be applied when matching this clause.\n * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.\n * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.\n * @property {number} [wildcard=0] - Whether the term should have wildcards appended or prepended.\n */\n\n/**\n * Adds a {@link lunr.Query~Clause} to this query.\n *\n * Unless the clause contains the fields to be matched all fields will be matched. In addition\n * a default boost of 1 is applied to the clause.\n *\n * @param {lunr.Query~Clause} clause - The clause to add to this query.\n * @see lunr.Query~Clause\n * @returns {lunr.Query}\n */\nlunr.Query.prototype.clause = function (clause) {\n  if (!('fields' in clause)) {\n    clause.fields = this.allFields\n  }\n\n  if (!('boost' in clause)) {\n    clause.boost = 1\n  }\n\n  if (!('usePipeline' in clause)) {\n    clause.usePipeline = true\n  }\n\n  if (!('wildcard' in clause)) {\n    clause.wildcard = lunr.Query.wildcard.NONE\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.LEADING) && (clause.term.charAt(0) != lunr.Query.wildcard)) {\n    clause.term = \"*\" + clause.term\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.TRAILING) && (clause.term.slice(-1) != lunr.Query.wildcard)) {\n    clause.term = \"\" + clause.term + \"*\"\n  }\n\n  this.clauses.push(clause)\n\n  return this\n}\n\n/**\n * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}\n * to the list of clauses that make up this query.\n *\n * @param {string} term - The term to add to the query.\n * @param {Object} [options] - Any additional properties to add to the query clause.\n * @returns {lunr.Query}\n * @see lunr.Query#clause\n * @see lunr.Query~Clause\n * @example <caption>adding a single term to a query</caption>\n * query.term(\"foo\")\n * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>\n * query.term(\"foo\", {\n *   fields: [\"title\"],\n *   boost: 10,\n *   wildcard: lunr.Query.wildcard.TRAILING\n * })\n */\nlunr.Query.prototype.term = function (term, options) {\n  var clause = options || {}\n  clause.term = term\n\n  this.clause(clause)\n\n  return this\n}\nlunr.QueryParseError = function (message, start, end) {\n  this.name = \"QueryParseError\"\n  this.message = message\n  this.start = start\n  this.end = end\n}\n\nlunr.QueryParseError.prototype = new Error\nlunr.QueryLexer = function (str) {\n  this.lexemes = []\n  this.str = str\n  this.length = str.length\n  this.pos = 0\n  this.start = 0\n  this.escapeCharPositions = []\n}\n\nlunr.QueryLexer.prototype.run = function () {\n  var state = lunr.QueryLexer.lexText\n\n  while (state) {\n    state = state(this)\n  }\n}\n\nlunr.QueryLexer.prototype.sliceString = function () {\n  var subSlices = [],\n      sliceStart = this.start,\n      sliceEnd = this.pos\n\n  for (var i = 0; i < this.escapeCharPositions.length; i++) {\n    sliceEnd = this.escapeCharPositions[i]\n    subSlices.push(this.str.slice(sliceStart, sliceEnd))\n    sliceStart = sliceEnd + 1\n  }\n\n  subSlices.push(this.str.slice(sliceStart, this.pos))\n  this.escapeCharPositions.length = 0\n\n  return subSlices.join('')\n}\n\nlunr.QueryLexer.prototype.emit = function (type) {\n  this.lexemes.push({\n    type: type,\n    str: this.sliceString(),\n    start: this.start,\n    end: this.pos\n  })\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.escapeCharacter = function () {\n  this.escapeCharPositions.push(this.pos - 1)\n  this.pos += 1\n}\n\nlunr.QueryLexer.prototype.next = function () {\n  if (this.pos >= this.length) {\n    return lunr.QueryLexer.EOS\n  }\n\n  var char = this.str.charAt(this.pos)\n  this.pos += 1\n  return char\n}\n\nlunr.QueryLexer.prototype.width = function () {\n  return this.pos - this.start\n}\n\nlunr.QueryLexer.prototype.ignore = function () {\n  if (this.start == this.pos) {\n    this.pos += 1\n  }\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.backup = function () {\n  this.pos -= 1\n}\n\nlunr.QueryLexer.prototype.acceptDigitRun = function () {\n  var char, charCode\n\n  do {\n    char = this.next()\n    charCode = char.charCodeAt(0)\n  } while (charCode > 47 && charCode < 58)\n\n  if (char != lunr.QueryLexer.EOS) {\n    this.backup()\n  }\n}\n\nlunr.QueryLexer.prototype.more = function () {\n  return this.pos < this.length\n}\n\nlunr.QueryLexer.EOS = 'EOS'\nlunr.QueryLexer.FIELD = 'FIELD'\nlunr.QueryLexer.TERM = 'TERM'\nlunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE'\nlunr.QueryLexer.BOOST = 'BOOST'\n\nlunr.QueryLexer.lexField = function (lexer) {\n  lexer.backup()\n  lexer.emit(lunr.QueryLexer.FIELD)\n  lexer.ignore()\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexTerm = function (lexer) {\n  if (lexer.width() > 1) {\n    lexer.backup()\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n\n  lexer.ignore()\n\n  if (lexer.more()) {\n    return lunr.QueryLexer.lexText\n  }\n}\n\nlunr.QueryLexer.lexEditDistance = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.EDIT_DISTANCE)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexBoost = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.BOOST)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexEOS = function (lexer) {\n  if (lexer.width() > 0) {\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n}\n\n// This matches the separator used when tokenising fields\n// within a document. These should match otherwise it is\n// not possible to search for some tokens within a document.\n//\n// It is possible for the user to change the separator on the\n// tokenizer so it _might_ clash with any other of the special\n// characters already used within the search string, e.g. :.\n//\n// This means that it is possible to change the separator in\n// such a way that makes some words unsearchable using a search\n// string.\nlunr.QueryLexer.termSeparator = lunr.tokenizer.separator\n\nlunr.QueryLexer.lexText = function (lexer) {\n  while (true) {\n    var char = lexer.next()\n\n    if (char == lunr.QueryLexer.EOS) {\n      return lunr.QueryLexer.lexEOS\n    }\n\n    // Escape character is '\\'\n    if (char.charCodeAt(0) == 92) {\n      lexer.escapeCharacter()\n      continue\n    }\n\n    if (char == \":\") {\n      return lunr.QueryLexer.lexField\n    }\n\n    if (char == \"~\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexEditDistance\n    }\n\n    if (char == \"^\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexBoost\n    }\n\n    if (char.match(lunr.QueryLexer.termSeparator)) {\n      return lunr.QueryLexer.lexTerm\n    }\n  }\n}\n\nlunr.QueryParser = function (str, query) {\n  this.lexer = new lunr.QueryLexer (str)\n  this.query = query\n  this.currentClause = {}\n  this.lexemeIdx = 0\n}\n\nlunr.QueryParser.prototype.parse = function () {\n  this.lexer.run()\n  this.lexemes = this.lexer.lexemes\n\n  var state = lunr.QueryParser.parseFieldOrTerm\n\n  while (state) {\n    state = state(this)\n  }\n\n  return this.query\n}\n\nlunr.QueryParser.prototype.peekLexeme = function () {\n  return this.lexemes[this.lexemeIdx]\n}\n\nlunr.QueryParser.prototype.consumeLexeme = function () {\n  var lexeme = this.peekLexeme()\n  this.lexemeIdx += 1\n  return lexeme\n}\n\nlunr.QueryParser.prototype.nextClause = function () {\n  var completedClause = this.currentClause\n  this.query.clause(completedClause)\n  this.currentClause = {}\n}\n\nlunr.QueryParser.parseFieldOrTerm = function (parser) {\n  var lexeme = parser.peekLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.type) {\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expected either a field or a term, found \" + lexeme.type\n\n      if (lexeme.str.length >= 1) {\n        errorMessage += \" with value '\" + lexeme.str + \"'\"\n      }\n\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n}\n\nlunr.QueryParser.parseField = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  if (parser.query.allFields.indexOf(lexeme.str) == -1) {\n    var possibleFields = parser.query.allFields.map(function (f) { return \"'\" + f + \"'\" }).join(', '),\n        errorMessage = \"unrecognised field '\" + lexeme.str + \"', possible fields: \" + possibleFields\n\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.fields = [lexeme.str]\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseTerm = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  parser.currentClause.term = lexeme.str.toLowerCase()\n\n  if (lexeme.str.indexOf(\"*\") != -1) {\n    parser.currentClause.usePipeline = false\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseEditDistance = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var editDistance = parseInt(lexeme.str, 10)\n\n  if (isNaN(editDistance)) {\n    var errorMessage = \"edit distance must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.editDistance = editDistance\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseBoost = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var boost = parseInt(lexeme.str, 10)\n\n  if (isNaN(boost)) {\n    var errorMessage = \"boost must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.boost = boost\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory)\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory()\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory()\n    }\n  }(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunr\n  }))\n})();\n\n\n\t// Adapted from https://github.com/pseudonym117/Levenshtein\n(function(root, factory){\n    if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n        define(function(){\n            return factory(root);\n        });\n    } else if (typeof module == 'object' && module && module.exports) {\n        module.exports = factory(root);\n    } else {\n        root.Levenshtein = factory(root);\n    }\n}(this, function(root){\n\n    function forEach( array, fn ) { var i, length\n        i = -1\n        length = array.length\n        while ( ++i < length )\n            fn( array[ i ], i, array )\n    }\n\n    function map( array, fn ) { var result\n        result = Array( array.length )\n        forEach( array, function ( val, i, array ) {\n            result.push( fn( val, i, array ) )\n        })\n        return result\n    }\n\n    function reduce( array, fn, accumulator ) {\n        forEach( array, function( val, i, array ) {\n            accumulator = fn( val, i, array )\n        })\n        return accumulator\n    }\n\n    // For string mode\n    function getChar(str, idx) {\n        return str.charAt(idx);\n    }\n\n    // For array mode\n    function getArrayMember(arr, idx) {\n        return arr[idx];\n    }\n\n    // Levenshtein distance\n    function Levenshtein( str_m, str_n ) {\n        var previous, current, matrix, getElem\n        // Set to string or array mode\n        if (typeof str_m === \"string\" && typeof str_n === \"string\") {\n            getElem = getChar;\n        } else if (typeof str_m === \"object\" && typeof str_n === \"object\") {\n            getElem = getArrayMember;\n        } else {\n            throw \"Levensthtein: input must be two strings or two arrays\"\n        }\n        // Constructor\n        matrix = this._matrix = []\n\n        // Sanity checks\n        if ( str_m == str_n )\n            return this.distance = 0\n        else if ( str_m == '' )\n            return this.distance = str_n.length\n        else if ( str_n == '' )\n            return this.distance = str_m.length\n        else {\n            // Danger Will Robinson\n            previous = [ 0 ]\n            forEach( str_m, function( v, i ) { i++, previous[ i ] = i } )\n\n            matrix[0] = previous\n            forEach( str_n, function( n_val, n_idx ) {\n                current = [ ++n_idx ]\n                forEach( str_m, function( m_val, m_idx ) {\n                    m_idx++\n                    if ( getElem(str_m, m_idx - 1) == getElem(str_n, n_idx - 1) )\n                        current[ m_idx ] = previous[ m_idx - 1 ]\n                    else\n                        current[ m_idx ] = Math.min\n                            ( previous[ m_idx ] + 1        // Deletion\n                            , current[ m_idx - 1 ] + 1     // Insertion\n                            , previous[ m_idx - 1 ] + 1    // Subtraction\n                            )\n                })\n                previous = current\n                matrix[ matrix.length ] = previous\n            })\n\n            return this.distance = current[ current.length - 1 ]\n        }\n    }\n\n    Levenshtein.prototype.toString = Levenshtein.prototype.inspect = function inspect ( no_print ) { var matrix, max, buff, sep, rows\n        matrix = this.getMatrix()\n        max = reduce( matrix,function( m, o ) {\n            return Math.max( m, reduce( o, Math.max, 0 ) )\n        }, 0 )\n        buff = Array( ( max + '' ).length ).join( ' ' )\n\n        sep = []\n        while ( sep.length < (matrix[0] && matrix[0].length || 0) )\n            sep[ sep.length ] = Array( buff.length + 1 ).join( '-' )\n        sep = sep.join( '-+' ) + '-'\n\n        rows = map( matrix, function( row ) { var cells\n            cells = map( row, function( cell ) {\n                return ( buff + cell ).slice( - buff.length )\n            })\n            return cells.join( ' |' ) + ' '\n        })\n\n        return rows.join( \"\\n\" + sep + \"\\n\" )\n    }\n\n    // steps to get from string 1 to string 2\n    Levenshtein.prototype.getSteps = function()     {\n        var steps, matrix, x, y, u, l, d, min\n        steps = []\n        matrix = this.getMatrix()\n        x = matrix.length - 1\n        y = matrix[0].length - 1\n        while(x !== 0 || y !== 0)     {\n            u = y > 0 ? matrix[x][y-1] : Number.MAX_VALUE\n            l = x > 0 ? matrix[x-1][y] : Number.MAX_VALUE\n            d = y > 0 && x > 0 ? matrix[x-1][y-1] : Number.MAX_VALUE\n            min = Math.min(u, l, d)\n            if(min === d) {\n                if(d < matrix[x][y]) {\n                    steps.push(['substitute', y, x])\n                }//  else steps.push(['no-op', y, x])\n                x--\n                y--\n            } else if(min === l) {\n                steps.push(['insert', y, x])\n                x--\n            } else {\n                steps.push(['delete', y, x])\n                y--\n            }\n        }\n        return steps\n    }\n\n    Levenshtein.prototype.getMatrix = function () {\n        return this._matrix.slice()\n    }\n\n    Levenshtein.prototype.valueOf = function() {\n        return this.distance\n    }\n\n    return Levenshtein\n\n}));\n\n\n\t//This is the main plugin definition\n\t$.fn.ghostHunter \t= function( options ) {\n\n\t\t//Here we use jQuery's extend to set default values if they weren't set by the user\n\t\tvar opts \t\t= $.extend( {}, $.fn.ghostHunter.defaults, options );\n\t\tif( opts.results )\n\t\t{\n\t\t\tpluginMethods.init( this , opts );\n\t\t\treturn pluginMethods;\n\t\t}\n\t};\n\t// If the Ghost instance is in a subpath of the site, set subpath\n\t// as the path to the site with a leading slash and no trailing slash\n\t// (i.e. \"/path/to/instance\").\n\t$.fn.ghostHunter.defaults = {\n\t\tresultsData\t\t\t: false,\n\t\tonPageLoad\t\t\t: false,\n\t\tonKeyUp\t\t\t\t: false,\n\t\tresult_template \t: \"<a id='gh-{{ref}}' class='gh-search-item' href='{{link}}'><p><h2>{{title}}</h2><h4>{{prettyPubDate}}</h4></p></a>\",\n\t\tinfo_template\t\t: \"<p>Number of posts found: {{amount}}</p>\",\n\t\tdisplaySearchInfo\t: true,\n\t\tzeroResultsInfo\t\t: true,\n\t\tbefore\t\t\t\t: false,\n\t\tonComplete\t\t\t: false,\n\t\tfilterfields\t\t: false,\n\t\tsubpath\t\t\t\t: \"\",\n\t\titem_preprocessor\t: false,\n\t\tindexing_start\t\t: false,\n\t\tindexing_end\t\t: false,\n\t\tincludebodysearch\t: false\n\t};\n\tvar prettyDate = function(date) {\n\t\tvar d = new Date(date);\n\t\tvar monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t\t\treturn d.getDate() + ' ' + monthNames[d.getMonth()] + ' ' + d.getFullYear();\n\t};\n\n\tvar getSubpathKey = function(str) {\n\t\treturn str.replace(/^\\//, \"\").replace(/\\//g, \"-\")\n\t};\n\n\tvar lastTimeoutID = null;\n\n\t// We add a prefix to new IDs and remove it after a set of\n\t// updates is complete, just in case a browser freaks over\n\t// duplicate IDs in the DOM.\n\tvar settleIDs = function() {\n\t\t$('.gh-search-item').each(function(){\n\t\t\tvar oldAttr = this.getAttribute('id');\n\t\t\tvar newAttr = oldAttr.replace(/^new-/, \"\");\n\t\t\tthis.setAttribute('id', newAttr);\n\t\t});\n\t};\n\tvar updateSearchList = function(listItems, apiData, steps) {\n\t\tfor (var i=0,ilen=steps.length;i<ilen;i++) {\n\t\t\tvar step = steps[i];\n\t\t\tif (step[0] == \"delete\") {\n\t\t\t\tlistItems.eq(step[1]-1).remove();\n\t\t\t} else {\n\t\t\t\tvar lunrref = apiData[step[2]-1].ref;\n\t\t\t\tvar postData = this.blogData[lunrref];\n\t\t\t\tvar html = this.format(this.result_template,postData);\n\t\t\t\tif (step[0] === \"substitute\") {\n\t\t\t\t\tlistItems.eq(step[1]-1).replaceWith(html);\n\t\t\t\t} else if (step[0] === \"insert\") {\n\t\t\t\t\tvar pos;\n\t\t\t\t\tif (step[1] === 0) {\n\t\t\t\t\t\tpos = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpos = (step[1]-1)\n\t\t\t\t\t}\n\t\t\t\t\tlistItems.eq(pos).after(html);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsettleIDs();\n\t}\n\n\tvar grabAndIndex = function(){\n\t\t// console.log('ghostHunter: grabAndIndex');\n\t\tthis.blogData = {};\n\t\tthis.latestPost = 0;\n    var url = \"/ghost/api/v2/content/posts/?key=\" + ghosthunter_key + \"&limit=all&include=tags\";\n\n\t\tvar params = {\n\t\t\tlimit: \"all\",\n\t\t\tinclude: \"tags\",\n\t\t};\n\t\tif ( this.includebodysearch ){\n\t\t\tparams.formats=[\"plaintext\"]\n      url += \"&formats=plaintext\"\n\t\t} else {\n\t\t\tparams.formats=[\"\"]\n\t\t}\n\t\tvar me = this;\n    $.get(url).done(function(data){\n\t\t\tvar idxSrc = data.posts;\n\t\t\t// console.log(\"ghostHunter: indexing all posts\")\n\t\t\tme.index = lunr(function () {\n\t\t\t\tthis.ref('id');\n\t\t\t\tthis.field('title');\n\t\t\t\tthis.field('description');\n\t\t\t\tif (me.includebodysearch){\n\t\t\t\tthis.field('plaintext');\n\t\t\t\t}\n\t\t\t\tthis.field('pubDate');\n\t\t\t\tthis.field('tag');\n\t\t\t\tidxSrc.forEach(function (arrayItem) {\n\t\t\t\t\t// console.log(\"start indexing an item: \" + arrayItem.id);\n\t\t\t\t\t// Track the latest value of updated_at,  to stash in localStorage\n\t\t\t\t\tvar itemDate = new Date(arrayItem.updated_at).getTime();\n\t\t\t\t\tvar recordedDate = new Date(me.latestPost).getTime();\n\t\t\t\t\tif (itemDate > recordedDate) {\n\t\t\t\t\t\tme.latestPost = arrayItem.updated_at;\n\t\t\t\t\t}\n\t\t\t\t\tvar tag_arr = arrayItem.tags.map(function(v) {\n\t\t\t\t\t\treturn v.name; // `tag` object has an `name` property which is the value of tag. If you also want other info, check API and get that property\n\t\t\t\t\t})\n\t\t\t\t\tif(arrayItem.meta_description == null) { arrayItem.meta_description = '' };\n\t\t\t\t\tvar category = tag_arr.join(\", \");\n\t\t\t\t\tif (category.length < 1){\n\t\t\t\t\t\tcategory = \"undefined\";\n\t\t\t\t\t}\n\t\t\t\t\tvar parsedData \t= {\n\t\t\t\t\t\tid \t\t\t: String(arrayItem.id),\n\t\t\t\t\t\ttitle \t\t: String(arrayItem.title),\n\t\t\t\t\t\tdescription\t: String(arrayItem.custom_excerpt),\n\t\t\t\t\t\tpubDate \t: String(arrayItem.published_at),\n\t\t\t\t\t\ttag \t\t: category\n\t\t\t\t\t}\n\t\t\t\t\tif  ( me.includebodysearch ){\n\t\t\t\t\t\tparsedData.plaintext=String(arrayItem.plaintext);\n\t\t\t\t\t}\n\t\t\t\t\tthis.add(parsedData)\n\t\t\t\t\tvar localUrl = me.subpath + arrayItem.url\n\t\t\t\t\tme.blogData[arrayItem.id] = {\n\t\t\t\t\t\ttitle: arrayItem.title,\n\t\t\t\t\t\tdescription: arrayItem.custom_excerpt,\n\t\t\t\t\t\tpubDate: prettyDate(parsedData.pubDate),\n\t\t\t\t\t\tlink: localUrl,\n\t\t\t\t\t\ttags: tag_arr\n\t\t\t\t\t};\n\t\t\t\t\t// If there is a metadata \"pre\"-processor for the item, run it here.\n\t\t\t\t\tif (me.item_preprocessor) {\n\t\t\t\t\t\tObject.assign(me.blogData[arrayItem.id], me.item_preprocessor(arrayItem));\n\t\t\t\t\t}\n\t\t\t\t\t// console.log(\"done indexing the item\");\n\t\t\t\t}, this);\n\t\t\t});\n\t\t\ttry {\n\t\t\t\tvar subpathKey = getSubpathKey(me.subpath);\n\t\t\t\tlocalStorage.setItem((\"ghost_\" + subpathKey + \"_lunrIndex\"), JSON.stringify(me.index));\n\t\t\t\tlocalStorage.setItem((\"ghost_\" + subpathKey + \"_blogData\"), JSON.stringify(me.blogData));\n\t\t\t\tlocalStorage.setItem((\"ghost_\" + subpathKey + \"_latestPost\"), me.latestPost);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn(\"ghostHunter: save to localStorage failed: \" + e);\n\t\t\t}\n\t\t\tif (me.indexing_end) {\n\t\t\t\tme.indexing_end();\n\t\t\t}\n\t\t\tme.isInit = true;\n\t\t});\n\t}\n\n\tvar pluginMethods\t= {\n\n\t\tisInit\t\t\t: false,\n\n\t\tinit\t\t\t: function( target , opts ){\n\t\t\tvar that = this;\n\t\t\tthat.target = target;\n\t\t\tObject.assign(this, opts);\n\t\t\t// console.log(\"ghostHunter: init\");\n\t\t\tif ( opts.onPageLoad ) {\n\t\t\t\tfunction miam () {\n\t\t\t\t\tthat.loadAPI();\n\t\t\t\t}\n\t\t\t\twindow.setTimeout(miam, 1);\n\t\t\t} else {\n\t\t\t\ttarget.focus(function(){\n\t\t\t\t\tthat.loadAPI();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttarget.closest(\"form\").submit(function(e){\n\t\t\t\te.preventDefault();\n\t\t\t\tthat.find(target.val());\n\t\t\t});\n\n\t\t\tif( opts.onKeyUp ) {\n\t\t\t\t// In search-as-you-type mode, the Enter key is meaningless,\n\t\t\t\t// so we disable it in the search field. If enabled, some browsers\n\t\t\t\t// will save data to history (even when autocomplete=\"false\"), which\n\t\t\t\t// is an intrusive headache, particularly on mobile.\n\t\t\t\ttarget.keydown(function(event){\n\t\t\t\t\tif (event.which === 13) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\ttarget.keyup(function(event) {\n\t\t\t\t\tthat.find(target.val());\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t},\n\n\t\tloadAPI\t\t\t: function(){\n\t\t\t// console.log('ghostHunter: loadAPI');\n\t\t\tif(!this.isInit) {\n\t\t\t\t// console.log('ghostHunter: this.isInit is true');\n\t\t\t\tif (this.indexing_start) {\n\t\t\t\t\tthis.indexing_start();\n\t\t\t\t}\n\t\t\t\t// If isInit is falsy, check for data in localStore,\n\t\t\t\t// parse into memory, and declare isInit to be true.\n\t\t\t\ttry {\n\t\t\t\t\tvar subpathKey = getSubpathKey(this.subpath);\n\t\t\t\t\tthis.index = localStorage.getItem((\"ghost_\" + subpathKey + \"_lunrIndex\"));\n\t\t\t\t\tthis.blogData = localStorage.getItem((\"ghost_\" + subpathKey + \"_blogData\"));\n\t\t\t\t\tthis.latestPost = localStorage.getItem((\"ghost_\" + subpathKey + \"_latestPost\"));\n\t\t\t\t\tif (this.latestPost && this.index && this.blogData) {\n\t\t\t\t\t\tthis.latestPost = this.latestPost;\n\t\t\t\t\t\tthis.index = lunr.Index.load(JSON.parse(this.index));\n\t\t\t\t\t\tthis.blogData = JSON.parse(this.blogData);\n\t\t\t\t\t\tthis.isInit = true;\n\t\t\t\t\t}\n\t\t\t\t} catch (e){\n\t\t\t\t\tconsole.warn(\"ghostHunter: retrieve from localStorage failed: \" + e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.isInit) {\n\t\t\t\t// console.log('ghostHunter: this.isInit recheck is true');\n\t\t\t\t// Check if there are new or edited posts\n\t\t\t\tvar params = {\n\t\t\t\t\tlimit: \"all\",\n\t\t\t\t\tfilter: \"updated_at:>\\'\" + this.latestPost.replace(/\\..*/, \"\").replace(/T/, \" \") + \"\\'\",\n\t\t\t\t\tfields: \"id\"\n\t\t\t\t};\n\n        var url = \"/ghost/api/v2/content/posts/?key=\" + ghosthunter_key + \"&limit=all&fields=id\" + \"&filter\" + \"updated_at:>\\'\" + this.latestPost.replace(/\\..*/, \"\").replace(/T/, \" \") + \"\\'\";\n\n\t\t\t\tvar me = this;\n        $.get(url).done(function(data){\n\t\t\t\t\tif (data.posts.length > 0) {\n\t\t\t\t\t\tgrabAndIndex.call(me);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (me.indexing_end) {\n\t\t\t\t\t\t\tme.indexing_end();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tme.isInit = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// console.log('ghostHunter: this.isInit recheck is false');\n\t\t\t\tgrabAndIndex.call(this)\n\t\t\t}\n\t\t},\n\n\n\t\tfind \t\t \t: function(value){\n\t\t\tclearTimeout(lastTimeoutID);\n\t\t\tif (!value) {\n\t\t\t\tvalue = \"\";\n\t\t\t};\n\t\t\tvalue = value.toLowerCase();\n\t\t\tlastTimeoutID = setTimeout(function() {\n\t\t\t\t// Query strategy is lifted from comments on a lunr.js issue: https://github.com/olivernn/lunr.js/issues/256\n\t\t\t\tvar thingsFound = [];\n\t\t\t\t// The query interface expects single terms, so we split.\n\t\t\t\tvar valueSplit = value.split(/\\s+/);\n\t\t\t\tfor (var i=0,ilen=valueSplit.length;i<ilen;i++) {\n\t\t\t\t\t// Fetch a list of matches for each term.\n\t\t\t\t\tvar v = valueSplit[i];\n\t\t\t\t\tif (!v) continue;\n\t\t\t\t\tthingsFound.push(this.index.query(function (q) {\n\t\t\t\t\t\t// For an explanation of lunr indexing options, see the lunr.js\n\t\t\t\t\t\t// documentation at https://lunrjs.com/docs/lunr.Query.html#~Clause\n\n\t\t\t\t\t\t// look for an exact match and apply a large positive boost\n\t\t\t\t\t\tq.term(v, {\n\t\t\t\t\t\t\tusePipeline: true,\n\t\t\t\t\t\t\tboost: 100,\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// look for terms that match the beginning of this queryTerm and apply a medium boost\n\t\t\t\t\t\tq.term(v, {\n\t\t\t\t\t\t\tusePipeline: false,\n\t\t\t\t\t\t\tboost: 10,\n\t\t\t\t\t\t\twildcard: lunr.Query.wildcard.TRAILING\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// look for terms that match with an edit distance of 1 and apply a small boost\n\t\t\t\t\t\tq.term(v, {\n\t\t\t\t\t\t\tusePipeline: false,\n\t\t\t\t\t\t\teditDistance: 1,\n\t\t\t\t\t\t\tboost: 1\n\t\t\t\t\t\t});\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t\tvar searchResult;\n\t\t\t\tif (thingsFound.length > 1) {\n\t\t\t\t\t// If we had multiple terms, we'll have multiple lists. We filter\n\t\t\t\t\t// them here to use only items that produce returns for all\n\t\t\t\t\t// terms. This spoofs an AND join between terms, which lunr.js can't\n\t\t\t\t\t// yet do internally.\n\t\t\t\t\t// By using the first list of items as master, we get weightings\n\t\t\t\t\t// based on the first term entered, which is more or less\n\t\t\t\t\t// what we would expect.\n\t\t\t\t\tvar searchResult = thingsFound[0];\n\t\t\t\t\tthingsFound = thingsFound.slice(1);\n\t\t\t\t\tfor (var i=searchResult.length-1;i>-1;i--) {\n\t\t\t\t\t\tvar ref = searchResult[i].ref;\n\t\t\t\t\t\tfor (j=0,jlen=thingsFound.length;j<jlen;j++) {\n\t\t\t\t\t\t\tvar otherRefs = {}\n\t\t\t\t\t\t\tfor (var k=0,klen=thingsFound[j].length;k<klen;k++) {\n\t\t\t\t\t\t\t\totherRefs[thingsFound[j][k].ref] = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!otherRefs[ref]) {\n\t\t\t\t\t\t\t\tsearchResult = searchResult.slice(0, i).concat(searchResult.slice(i+1));\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (thingsFound.length === 1) {\n\t\t\t\t\t// If we had just one term and one list, return that.\n\t\t\t\t\tsearchResult = thingsFound[0];\n\t\t\t\t} else {\n\t\t\t\t\t// If there was no search result, return an empty list.\n\t\t\t\t\tsearchResult = [];\n\t\t\t\t}\n\n\t\t\t\tvar results \t\t= $(this.results);\n\t\t\t\tvar resultsData \t= [];\n\t\t\t\tif (searchResult.length === 0) {\n\t\t\t\t\tresults.empty();\n\t\t\t\t\tif (this.displaySearchInfo && this.zeroResultsInfo) {\n\t\t\t\t\t\tresults.append(this.format(this.info_template,{\"amount\":0}));\n\t\t\t\t\t}\n\t\t\t\t} else if (this.displaySearchInfo) {\n\t\t\t\t\tif (results.length > 0) {\n\t\t\t\t\t\tresults.children().eq(0).replaceWith(this.format(this.info_template,{\"amount\":searchResult.length}));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresults.append(this.format(this.info_template,{\"amount\":searchResult.length}));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(this.before) {\n\t\t\t\t\tthis.before();\n\t\t\t\t};\n\n\t\t\t\t// Get the blogData for the full set, for onComplete\n\t\t\t\tfor (var i = 0; i < searchResult.length; i++) {\n\t\t\t\t\tvar lunrref\t\t= searchResult[i].ref;\n\t\t\t\t\tvar postData  \t= this.blogData[lunrref];\n\t\t\t\t\tif (postData) {\n\t\t\t\t\t\tpostData.ref = lunrref;\n\t\t\t\t\t\tresultsData.push(postData);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"ghostHunter: index/data mismatch. Ouch.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Get an array of IDs present in current results\n\t\t\t\tvar listItems = $('.gh-search-item');\n\t\t\t\tvar currentRefs = listItems\n\t\t\t\t\t.map(function(){\n\t\t\t\t\t\treturn this.id.slice(3);\n\t\t\t\t\t}).get();\n\t\t\t\tif (currentRefs.length === 0) {\n\t\t\t\t\tfor (var i=0,ilen=resultsData.length;i<ilen;i++) {\n\t\t\t\t\t\tresults.append(this.format(this.result_template,resultsData[i]));\n\t\t\t\t\t}\n\t\t\t\t\tsettleIDs();\n\t\t\t\t} else {\n\t\t\t\t\t// Get an array of IDs present in searchResult\n\t\t\t\t\tvar newRefs = [];\n\t\t\t\t\tfor (var i=0,ilen=searchResult.length;i<ilen;i++) {\n\t\t\t\t\t\tnewRefs.push(searchResult[i].ref)\n\t\t\t\t\t}\n\t\t\t\t\t// Get the Levenshtein steps needed to transform current into searchResult\n\t\t\t\t\tvar levenshtein = new Levenshtein(currentRefs, newRefs);\n\t\t\t\t\tvar steps = levenshtein.getSteps();\n\t\t\t\t\t// Apply the operations\n\t\t\t\t\tupdateSearchList.call(this, listItems, searchResult, steps);\n\t\t\t\t}\n\t\t\t\t// Tidy up\n\t\t\t\tif(this.onComplete) {\n\t\t\t\t\tthis.onComplete(resultsData);\n\t\t\t\t};\n\t\t\t}.bind(this), 100);\n\t\t},\n\n\t\tclear \t\t\t: function(){\n\t\t\t$(this.results).empty();\n\t\t\tthis.target.val(\"\");\n\t\t},\n\n\t\tformat \t\t\t: function (t, d) {\n\t\t\treturn t.replace(/{{([^{}]*)}}/g, function (a, b) {\n\t\t\t\tvar r = d[b];\n\t\t\t\treturn typeof r === 'string' || typeof r === 'number' ? r : a;\n\t\t\t});\n\t\t}\n\t}\n\n})( jQuery );"]}